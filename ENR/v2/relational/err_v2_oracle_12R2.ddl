-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-12-08 07:40:29 EST
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE TABLE annotated_string (
    annotation           VARCHAR2(4000),
    content              VARCHAR2(4000) NOT NULL,
    annotated_string_id  NUMBER NOT NULL
);

ALTER TABLE annotated_string ADD CONSTRAINT annotated_string_pk PRIMARY KEY ( annotated_string_id );

CREATE TABLE annotated_uri (
    annotation        VARCHAR2(4000),
    content           VARCHAR2(4000) NOT NULL,
    annotated_uri_id  NUMBER NOT NULL
);

ALTER TABLE annotated_uri ADD CONSTRAINT annotated_uri_pk PRIMARY KEY ( annotated_uri_id );

CREATE TABLE ballot_counts (
    counts_id            NUMBER NOT NULL,
    ballots_cast         INTEGER,
    ballots_outstanding  INTEGER,
    ballots_rejected     INTEGER,
    ballot_counts_id     NUMBER NOT NULL,
    election_id          NUMBER NOT NULL
);

ALTER TABLE ballot_counts ADD CONSTRAINT ballot_counts_pk PRIMARY KEY ( counts_id );

ALTER TABLE ballot_counts ADD CONSTRAINT ballot_counts_ballot_counts_id_un UNIQUE ( ballot_counts_id );

CREATE TABLE ballot_measure_contest (
    contest_id                 NUMBER NOT NULL,
    con_statement              VARCHAR2(4000),
    effect_of_abstain          VARCHAR2(4000),
    full_text                  VARCHAR2(4000),
    other_type                 VARCHAR2(4000),
    passage_threshold          VARCHAR2(4000),
    pro_statement              VARCHAR2(4000),
    summary_text               VARCHAR2(4000),
    type                       VARCHAR2(50),
    ballot_measure_contest_id  NUMBER NOT NULL
);

ALTER TABLE ballot_measure_contest
    ADD CHECK ( type IN (
        'ballot-measure',
        'initiative',
        'other',
        'recall',
        'referendum'
    ) );

ALTER TABLE ballot_measure_contest ADD CONSTRAINT ballot_measure_contest_pk PRIMARY KEY ( contest_id );

ALTER TABLE ballot_measure_contest ADD CONSTRAINT ballot_measure_contest_ballot_measure_contest_id_un UNIQUE ( ballot_measure_contest_id );

CREATE TABLE ballot_measure_contest_info_uri (
    annotated_uri_id  NUMBER NOT NULL,
    contest_id        NUMBER NOT NULL
);

ALTER TABLE ballot_measure_contest_info_uri ADD CONSTRAINT ballot_measure_contest_info_uri_pk PRIMARY KEY ( annotated_uri_id,
                                                                                                             contest_id );

CREATE TABLE ballot_measure_selection (
    contest_selection_id         NUMBER NOT NULL,
    selection                    VARCHAR2(4000) NOT NULL,
    ballot_measure_selection_id  NUMBER NOT NULL
);

ALTER TABLE ballot_measure_selection ADD CONSTRAINT ballot_measure_selection_pk PRIMARY KEY ( contest_selection_id );

ALTER TABLE ballot_measure_selection ADD CONSTRAINT ballot_measure_selection_ballot_measure_selection_id_un UNIQUE ( ballot_measure_selection_id );

CREATE TABLE ballot_measure_selection_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    contest_selection_id    NUMBER NOT NULL
);

ALTER TABLE ballot_measure_selection_external_identifier ADD CONSTRAINT ballot_measure_selection_external_identifier_pk PRIMARY KEY (
external_identifier_id,
                                                                                                                                 contest_selection_id );

CREATE TABLE ballot_style (
    ballot_style_id  NUMBER NOT NULL,
    election_id      NUMBER NOT NULL
);

ALTER TABLE ballot_style ADD CONSTRAINT ballot_style_pk PRIMARY KEY ( ballot_style_id );

CREATE TABLE ballot_style_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    ballot_style_id         NUMBER NOT NULL
);

ALTER TABLE ballot_style_external_identifier ADD CONSTRAINT ballot_style_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                               ballot_style_id );

CREATE TABLE ballot_style_gp_unit (
    gp_unit_id       NUMBER NOT NULL,
    ballot_style_id  NUMBER NOT NULL
);

ALTER TABLE ballot_style_gp_unit ADD CONSTRAINT ballot_style_gp_unit_pk PRIMARY KEY ( gp_unit_id,
                                                                                       ballot_style_id );

CREATE TABLE ballot_style_image_uri (
    annotated_uri_id  NUMBER NOT NULL,
    ballot_style_id   NUMBER NOT NULL
);

ALTER TABLE ballot_style_image_uri ADD CONSTRAINT ballot_style_image_uri_pk PRIMARY KEY ( annotated_uri_id,
                                                                                           ballot_style_id );

CREATE TABLE ballot_style_party (
    party_id         NUMBER NOT NULL,
    ballot_style_id  NUMBER NOT NULL
);

ALTER TABLE ballot_style_party ADD CONSTRAINT ballot_style_party_pk PRIMARY KEY ( party_id,
                                                                                   ballot_style_id );

CREATE TABLE candidate (
    ballot_name             VARCHAR2(4000) NOT NULL,
    campaign_slogan         VARCHAR2(4000),
    file_date               VARCHAR2(4000),
    is_incumbent            NUMBER,
    is_top_ticket           NUMBER,
    post_election_status    VARCHAR2(50),
    pre_election_status     VARCHAR2(50),
    candidate_id            NUMBER NOT NULL,
    contact_information_id  NUMBER,
    party_id                NUMBER,
    person_id               NUMBER,
    election_id             NUMBER NOT NULL
);

ALTER TABLE candidate
    ADD CHECK ( post_election_status IN (
        'advanced-to-runoff',
        'defeated',
        'projected-winner',
        'winner',
        'withdrawn'
    ) );

ALTER TABLE candidate
    ADD CHECK ( pre_election_status IN (
        'filed',
        'qualified',
        'withdrawn'
    ) );

CREATE UNIQUE INDEX candidate_idx ON
    candidate (
        contact_information_id
    ASC );

ALTER TABLE candidate ADD CONSTRAINT candidate_pk PRIMARY KEY ( candidate_id );

CREATE TABLE candidate_contest (
    contest_id            NUMBER NOT NULL,
    number_elected        INTEGER,
    number_runoff         INTEGER,
    votes_allowed         INTEGER NOT NULL,
    candidate_contest_id  NUMBER NOT NULL
);

ALTER TABLE candidate_contest ADD CONSTRAINT candidate_contest_pk PRIMARY KEY ( contest_id );

ALTER TABLE candidate_contest ADD CONSTRAINT candidate_contest_candidate_contest_id_un UNIQUE ( candidate_contest_id );

CREATE TABLE candidate_contest_office (
    office_id   NUMBER NOT NULL,
    contest_id  NUMBER NOT NULL
);

ALTER TABLE candidate_contest_office ADD CONSTRAINT candidate_contest_office_pk PRIMARY KEY ( office_id,
                                                                                               contest_id );

CREATE TABLE candidate_contest_primary_party (
    party_id    NUMBER NOT NULL,
    contest_id  NUMBER NOT NULL
);

ALTER TABLE candidate_contest_primary_party ADD CONSTRAINT candidate_contest_primary_party_pk PRIMARY KEY ( party_id,
                                                                                                             contest_id );

CREATE TABLE candidate_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    candidate_id            NUMBER NOT NULL
);

ALTER TABLE candidate_external_identifier ADD CONSTRAINT candidate_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                         candidate_id );

CREATE TABLE candidate_selection (
    contest_selection_id    NUMBER NOT NULL,
    is_write_in             NUMBER,
    candidate_selection_id  NUMBER NOT NULL
);

ALTER TABLE candidate_selection ADD CONSTRAINT candidate_selection_pk PRIMARY KEY ( contest_selection_id );

ALTER TABLE candidate_selection ADD CONSTRAINT candidate_selection_candidate_selection_id_un UNIQUE ( candidate_selection_id );

CREATE TABLE candidate_selection_candidate (
    candidate_id          NUMBER NOT NULL,
    contest_selection_id  NUMBER NOT NULL
);

ALTER TABLE candidate_selection_candidate ADD CONSTRAINT candidate_selection_candidate_pk PRIMARY KEY ( candidate_id,
                                                                                                         contest_selection_id );

CREATE TABLE candidate_selection_endorsement_party (
    party_id              NUMBER NOT NULL,
    contest_selection_id  NUMBER NOT NULL
);

ALTER TABLE candidate_selection_endorsement_party ADD CONSTRAINT candidate_selection_endorsement_party_pk PRIMARY KEY ( party_id,
                                                                                                                         contest_selection_id );

CREATE TABLE coalition (
    party_id      NUMBER NOT NULL,
    coalition_id  NUMBER NOT NULL
);

ALTER TABLE coalition ADD CONSTRAINT coalition_pk PRIMARY KEY ( party_id );

ALTER TABLE coalition ADD CONSTRAINT coalition_coalition_id_un UNIQUE ( coalition_id );

CREATE TABLE coalition_contest (
    contest_id  NUMBER NOT NULL,
    party_id    NUMBER NOT NULL
);

ALTER TABLE coalition_contest ADD CONSTRAINT coalition_contest_pk PRIMARY KEY ( contest_id,
                                                                                 party_id );

CREATE TABLE coalition_party (
    party_id   NUMBER NOT NULL,
    party_id1  NUMBER NOT NULL
);

ALTER TABLE coalition_party ADD CONSTRAINT coalition_party_pk PRIMARY KEY ( party_id,
                                                                             party_id1 );

CREATE TABLE contact_information (
    directions              VARCHAR2(4000),
    label                   VARCHAR2(4000),
    name                    VARCHAR2(4000),
    contact_information_id  NUMBER NOT NULL,
    lat_lng_id              NUMBER,
    person_id               NUMBER NOT NULL
);

CREATE UNIQUE INDEX contact_information_idx ON
    contact_information (
        lat_lng_id
    ASC );

ALTER TABLE contact_information ADD CONSTRAINT contact_information_pk PRIMARY KEY ( contact_information_id );

CREATE TABLE contact_information_address_line (
    address_line                         VARCHAR2(4000),
    contact_information_address_line_id  NUMBER NOT NULL,
    contact_information_id               NUMBER NOT NULL
);

ALTER TABLE contact_information_address_line ADD CONSTRAINT contact_information_address_line_pk PRIMARY KEY ( contact_information_address_line_id );

CREATE TABLE contact_information_email (
    annotated_string_id     NUMBER NOT NULL,
    contact_information_id  NUMBER NOT NULL
);

ALTER TABLE contact_information_email ADD CONSTRAINT contact_information_email_pk PRIMARY KEY ( annotated_string_id,
                                                                                                 contact_information_id );

CREATE TABLE contact_information_fax (
    annotated_string_id     NUMBER NOT NULL,
    contact_information_id  NUMBER NOT NULL
);

ALTER TABLE contact_information_fax ADD CONSTRAINT contact_information_fax_pk PRIMARY KEY ( annotated_string_id,
                                                                                             contact_information_id );

CREATE TABLE contact_information_phone (
    annotated_string_id     NUMBER NOT NULL,
    contact_information_id  NUMBER NOT NULL
);

ALTER TABLE contact_information_phone ADD CONSTRAINT contact_information_phone_pk PRIMARY KEY ( annotated_string_id,
                                                                                                 contact_information_id );

CREATE TABLE contact_information_uri (
    annotated_uri_id        NUMBER NOT NULL,
    contact_information_id  NUMBER NOT NULL
);

ALTER TABLE contact_information_uri ADD CONSTRAINT contact_information_uri_pk PRIMARY KEY ( annotated_uri_id,
                                                                                             contact_information_id );

CREATE TABLE contest (
    contest_id            NUMBER NOT NULL,
    abbreviation          VARCHAR2(4000),
    ballot_sub_title      VARCHAR2(4000),
    ballot_title          VARCHAR2(4000),
    has_rotation          NUMBER,
    name                  VARCHAR2(4000) NOT NULL,
    other_vote_variation  VARCHAR2(4000),
    sequence_order        INTEGER,
    sub_units_reported    INTEGER,
    total_sub_units       INTEGER,
    vote_variation        VARCHAR2(50),
    gp_unit_id            NUMBER NOT NULL,
    reporting_unit_id     NUMBER NOT NULL,
    election_id           NUMBER NOT NULL
);

ALTER TABLE contest
    ADD CHECK ( vote_variation IN (
        'approval',
        'borda',
        'cumulative',
        'majority',
        'n-of-m',
        'other',
        'plurality',
        'proportional',
        'range',
        'rcv',
        'super-majority'
    ) );

--  ERROR: No Discriminator Column found in Arc FKArc_1 - check constraint cannot be generated

ALTER TABLE contest ADD CONSTRAINT contest_pk PRIMARY KEY ( contest_id );

CREATE TABLE contest_count_status (
    count_status_id  NUMBER NOT NULL,
    contest_id       NUMBER NOT NULL
);

ALTER TABLE contest_count_status ADD CONSTRAINT contest_count_status_pk PRIMARY KEY ( count_status_id,
                                                                                       contest_id );

CREATE TABLE contest_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    contest_id              NUMBER NOT NULL
);

ALTER TABLE contest_external_identifier ADD CONSTRAINT contest_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                     contest_id );

CREATE TABLE contest_selection (
    contest_selection_id  NUMBER NOT NULL,
    sequence_order        INTEGER,
    contest_id            NUMBER NOT NULL
);

--  ERROR: No Discriminator Column found in Arc FKArc_2 - check constraint cannot be generated

ALTER TABLE contest_selection ADD CONSTRAINT contest_selection_pk PRIMARY KEY ( contest_selection_id );

CREATE TABLE count_status (
    other_type       VARCHAR2(4000),
    status           VARCHAR2(50) NOT NULL,
    type             VARCHAR2(50) NOT NULL,
    count_status_id  NUMBER NOT NULL
);

ALTER TABLE count_status
    ADD CHECK ( status IN (
        'completed',
        'in-process',
        'not-processed',
        'unknown'
    ) );

ALTER TABLE count_status
    ADD CHECK ( type IN (
        'absentee',
        'absentee-fwab',
        'absentee-in-person',
        'absentee-mail',
        'early',
        'election-day',
        'other',
        'provisional',
        'seats',
        'total',
        'uocava',
        'write-in'
    ) );

ALTER TABLE count_status ADD CONSTRAINT count_status_pk PRIMARY KEY ( count_status_id );

CREATE TABLE counts (
    counts_id                  NUMBER NOT NULL,
    is_suppressed_for_privacy  NUMBER,
    other_type                 VARCHAR2(4000),
    round                      INTEGER,
    type                       VARCHAR2(50) NOT NULL,
    gp_unit_id                 NUMBER NOT NULL
);

ALTER TABLE counts
    ADD CHECK ( type IN (
        'absentee',
        'absentee-fwab',
        'absentee-in-person',
        'absentee-mail',
        'early',
        'election-day',
        'other',
        'provisional',
        'seats',
        'total',
        'uocava',
        'write-in'
    ) );

--  ERROR: No Discriminator Column found in Arc FKArc_3 - check constraint cannot be generated

ALTER TABLE counts ADD CONSTRAINT counts_pk PRIMARY KEY ( counts_id );

CREATE TABLE counts_device_class (
    device_class_id  NUMBER NOT NULL,
    counts_id        NUMBER NOT NULL
);

ALTER TABLE counts_device_class ADD CONSTRAINT counts_device_class_pk PRIMARY KEY ( device_class_id,
                                                                                     counts_id );

CREATE TABLE device_class (
    manufacturer     VARCHAR2(4000),
    model            VARCHAR2(4000),
    other_type       VARCHAR2(4000),
    type             VARCHAR2(50),
    device_class_id  NUMBER NOT NULL
);

ALTER TABLE device_class
    ADD CHECK ( type IN (
        'bmd',
        'dre',
        'manual-count',
        'opscan-central',
        'opscan-precinct',
        'other',
        'unknown'
    ) );

ALTER TABLE device_class ADD CONSTRAINT device_class_pk PRIMARY KEY ( device_class_id );

CREATE TABLE election (
    end_date                VARCHAR2(4000) NOT NULL,
    name                    VARCHAR2(4000) NOT NULL,
    other_type              VARCHAR2(4000),
    start_date              VARCHAR2(4000) NOT NULL,
    type                    VARCHAR2(50) NOT NULL,
    election_id             NUMBER NOT NULL,
    contact_information_id  NUMBER,
    gp_unit_id              NUMBER NOT NULL,
    reporting_unit_id       NUMBER NOT NULL,
    election_report_id      NUMBER NOT NULL
);

ALTER TABLE election
    ADD CHECK ( type IN (
        'general',
        'other',
        'partisan-primary-closed',
        'partisan-primary-open',
        'primary',
        'runoff',
        'special'
    ) );

CREATE UNIQUE INDEX election_idx ON
    election (
        contact_information_id
    ASC );

ALTER TABLE election ADD CONSTRAINT election_pk PRIMARY KEY ( election_id );

CREATE TABLE election_administration (
    name                        VARCHAR2(4000),
    election_administration_id  NUMBER NOT NULL,
    contact_information_id      NUMBER
);

CREATE UNIQUE INDEX election_administration_idx ON
    election_administration (
        contact_information_id
    ASC );

ALTER TABLE election_administration ADD CONSTRAINT election_administration_pk PRIMARY KEY ( election_administration_id );

CREATE TABLE election_administration_election_official_person (
    person_id                   NUMBER NOT NULL,
    election_administration_id  NUMBER NOT NULL
);

ALTER TABLE election_administration_election_official_person ADD CONSTRAINT election_administration_election_official_person_pk PRIMARY
KEY ( person_id,
                                                                                                                                 election_administration_id );

CREATE TABLE election_count_status (
    count_status_id  NUMBER NOT NULL,
    election_id      NUMBER NOT NULL
);

ALTER TABLE election_count_status ADD CONSTRAINT election_count_status_pk PRIMARY KEY ( count_status_id,
                                                                                         election_id );

CREATE TABLE election_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    election_id             NUMBER NOT NULL
);

ALTER TABLE election_external_identifier ADD CONSTRAINT election_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                       election_id );

CREATE TABLE election_report (
    format                 VARCHAR2(50) NOT NULL,
    generated_date         TIMESTAMP NOT NULL,
    is_test                NUMBER,
    issuer                 VARCHAR2(4000) NOT NULL,
    issuer_abbreviation    VARCHAR2(4000) NOT NULL,
    notes                  VARCHAR2(4000),
    sequence_end           INTEGER NOT NULL,
    sequence_start         INTEGER NOT NULL,
    status                 VARCHAR2(50) NOT NULL,
    test_type              VARCHAR2(4000),
    vendor_application_id  VARCHAR2(4000) NOT NULL,
    election_report_id     NUMBER NOT NULL
);

ALTER TABLE election_report
    ADD CHECK ( format IN (
        'precinct-level',
        'summary-contest'
    ) );

ALTER TABLE election_report
    ADD CHECK ( status IN (
        'certified',
        'correction',
        'pre-election',
        'recount',
        'unofficial-complete',
        'unofficial-partial'
    ) );

ALTER TABLE election_report ADD CONSTRAINT election_report_pk PRIMARY KEY ( election_report_id );

CREATE TABLE election_report_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    election_report_id      NUMBER NOT NULL
);

ALTER TABLE election_report_external_identifier ADD CONSTRAINT election_report_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                                     election_report_id );

CREATE TABLE external_identifier (
    label                   VARCHAR2(4000),
    other_type              VARCHAR2(4000),
    type                    VARCHAR2(50) NOT NULL,
    value                   VARCHAR2(4000) NOT NULL,
    external_identifier_id  NUMBER NOT NULL
);

ALTER TABLE external_identifier
    ADD CHECK ( type IN (
        'fips',
        'local-level',
        'national-level',
        'ocd-id',
        'other',
        'state-level'
    ) );

ALTER TABLE external_identifier ADD CONSTRAINT external_identifier_pk PRIMARY KEY ( external_identifier_id );

CREATE TABLE gp_unit (
    gp_unit_id          NUMBER NOT NULL,
    name                VARCHAR2(4000),
    election_report_id  NUMBER NOT NULL
);

--  ERROR: No Discriminator Column found in Arc FKArc_4 - check constraint cannot be generated

ALTER TABLE gp_unit ADD CONSTRAINT gp_unit_pk PRIMARY KEY ( gp_unit_id );

CREATE TABLE gp_unit_composing_gp_unit (
    gp_unit_id   NUMBER NOT NULL,
    gp_unit_id1  NUMBER NOT NULL
);

ALTER TABLE gp_unit_composing_gp_unit ADD CONSTRAINT gp_unit_composing_gp_unit_pk PRIMARY KEY ( gp_unit_id,
                                                                                                 gp_unit_id1 );

CREATE TABLE gp_unit_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    gp_unit_id              NUMBER NOT NULL
);

ALTER TABLE gp_unit_external_identifier ADD CONSTRAINT gp_unit_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                     gp_unit_id );

CREATE TABLE header (
    name                VARCHAR2(4000) NOT NULL,
    header_id           NUMBER NOT NULL,
    election_report_id  NUMBER NOT NULL
);

ALTER TABLE header ADD CONSTRAINT header_pk PRIMARY KEY ( header_id );

CREATE TABLE header_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    header_id               NUMBER NOT NULL
);

ALTER TABLE header_external_identifier ADD CONSTRAINT header_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                   header_id );

CREATE TABLE hours (
    day          VARCHAR2(50),
    end_time     VARCHAR2(4000) NOT NULL,
    label        VARCHAR2(4000),
    start_time   VARCHAR2(4000) NOT NULL,
    hours_id     NUMBER NOT NULL,
    schedule_id  NUMBER NOT NULL
);

ALTER TABLE hours
    ADD CHECK ( day IN (
        'all',
        'friday',
        'monday',
        'saturday',
        'sunday',
        'thursday',
        'tuesday',
        'wednesday',
        'weekday',
        'weekend'
    ) );

ALTER TABLE hours ADD CONSTRAINT hours_pk PRIMARY KEY ( hours_id );

CREATE TABLE lat_lng (
    label       VARCHAR2(4000),
    latitude    NUMBER NOT NULL,
    longitude   NUMBER NOT NULL,
    source      VARCHAR2(4000),
    lat_lng_id  NUMBER NOT NULL
);

ALTER TABLE lat_lng ADD CONSTRAINT lat_lng_pk PRIMARY KEY ( lat_lng_id );

CREATE TABLE office (
    description             VARCHAR2(4000),
    filing_deadline         VARCHAR2(4000),
    is_partisan             NUMBER,
    name                    VARCHAR2(4000) NOT NULL,
    office_id               NUMBER NOT NULL,
    election_report_id      NUMBER NOT NULL,
    contact_information_id  NUMBER,
    gp_unit_id              NUMBER,
    reporting_unit_id       NUMBER,
    term_id                 NUMBER
);

CREATE UNIQUE INDEX office_idx ON
    office (
        contact_information_id
    ASC );

CREATE UNIQUE INDEX office_idxv1 ON
    office (
        term_id
    ASC );

ALTER TABLE office ADD CONSTRAINT office_pk PRIMARY KEY ( office_id );

CREATE TABLE office_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    office_id               NUMBER NOT NULL
);

ALTER TABLE office_external_identifier ADD CONSTRAINT office_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                   office_id );

CREATE TABLE office_group (
    label               VARCHAR2(4000),
    name                VARCHAR2(4000) NOT NULL,
    office_group_id     NUMBER NOT NULL,
    election_report_id  NUMBER NOT NULL,
    office_group_id1    NUMBER NOT NULL
);

ALTER TABLE office_group ADD CONSTRAINT office_group_pk PRIMARY KEY ( office_group_id );

CREATE TABLE office_group_office (
    office_id        NUMBER NOT NULL,
    office_group_id  NUMBER NOT NULL
);

ALTER TABLE office_group_office ADD CONSTRAINT office_group_office_pk PRIMARY KEY ( office_id,
                                                                                     office_group_id );

CREATE TABLE office_office_holder_person (
    person_id  NUMBER NOT NULL,
    office_id  NUMBER NOT NULL
);

ALTER TABLE office_office_holder_person ADD CONSTRAINT office_office_holder_person_pk PRIMARY KEY ( person_id,
                                                                                                     office_id );

CREATE TABLE ordered_content (
    ordered_content_id   NUMBER NOT NULL,
    ballot_style_id      NUMBER NOT NULL,
    ordered_content_id1  NUMBER NOT NULL,
    ordered_header_id    NUMBER NOT NULL
);

--  ERROR: No Discriminator Column found in Arc FKArc_5 - check constraint cannot be generated

ALTER TABLE ordered_content ADD CONSTRAINT ordered_content_pk PRIMARY KEY ( ordered_content_id );

CREATE TABLE ordered_contest (
    ordered_content_id  NUMBER NOT NULL,
    ordered_contest_id  NUMBER NOT NULL,
    contest_id          NUMBER NOT NULL
);

ALTER TABLE ordered_contest ADD CONSTRAINT ordered_contest_pk PRIMARY KEY ( ordered_content_id );

ALTER TABLE ordered_contest ADD CONSTRAINT ordered_contest_ordered_contest_id_un UNIQUE ( ordered_contest_id );

CREATE TABLE ordered_contest_ordered_contest_selection (
    contest_selection_id  NUMBER NOT NULL,
    ordered_content_id    NUMBER NOT NULL
);

ALTER TABLE ordered_contest_ordered_contest_selection ADD CONSTRAINT ordered_contest_ordered_contest_selection_pk PRIMARY KEY ( contest_selection_id,
                                                                                                                                 ordered_content_id );

CREATE TABLE ordered_header (
    ordered_header_id   NUMBER NOT NULL,
    ordered_content_id  NUMBER NOT NULL,
    header_id           NUMBER NOT NULL
);

ALTER TABLE ordered_header ADD CONSTRAINT ordered_header_pk PRIMARY KEY ( ordered_content_id,
                                                                          ordered_header_id );

ALTER TABLE ordered_header ADD CONSTRAINT ordered_header_ordered_header_id_un UNIQUE ( ordered_header_id );

CREATE TABLE other_counts (
    overvotes        NUMBER,
    undervotes       NUMBER,
    write_ins        INTEGER,
    other_counts_id  NUMBER NOT NULL,
    contest_id       NUMBER NOT NULL,
    gp_unit_id       NUMBER NOT NULL
);

ALTER TABLE other_counts ADD CONSTRAINT other_counts_pk PRIMARY KEY ( other_counts_id );

CREATE TABLE other_counts_device_class (
    device_class_id  NUMBER NOT NULL,
    other_counts_id  NUMBER NOT NULL
);

ALTER TABLE other_counts_device_class ADD CONSTRAINT other_counts_device_class_pk PRIMARY KEY ( device_class_id,
                                                                                                 other_counts_id );

CREATE TABLE party (
    party_id                NUMBER NOT NULL,
    abbreviation            VARCHAR2(4000),
    color                   VARCHAR2(4000),
    is_recognized_party     NUMBER,
    name                    VARCHAR2(4000) NOT NULL,
    slogan                  VARCHAR2(4000),
    election_report_id      NUMBER NOT NULL,
    contact_information_id  NUMBER
);

CREATE UNIQUE INDEX party_idx ON
    party (
        contact_information_id
    ASC );

ALTER TABLE party ADD CONSTRAINT party_pk PRIMARY KEY ( party_id );

CREATE TABLE party_contest (
    contest_id        NUMBER NOT NULL,
    party_contest_id  NUMBER NOT NULL
);

ALTER TABLE party_contest ADD CONSTRAINT party_contest_pk PRIMARY KEY ( contest_id );

ALTER TABLE party_contest ADD CONSTRAINT party_contest_party_contest_id_un UNIQUE ( party_contest_id );

CREATE TABLE party_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    party_id                NUMBER NOT NULL
);

ALTER TABLE party_external_identifier ADD CONSTRAINT party_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                 party_id );

CREATE TABLE party_leader_person (
    person_id  NUMBER NOT NULL,
    party_id   NUMBER NOT NULL
);

ALTER TABLE party_leader_person ADD CONSTRAINT party_leader_person_pk PRIMARY KEY ( person_id,
                                                                                     party_id );

CREATE TABLE party_logo_uri (
    annotated_uri_id  NUMBER NOT NULL,
    party_id          NUMBER NOT NULL
);

ALTER TABLE party_logo_uri ADD CONSTRAINT party_logo_uri_pk PRIMARY KEY ( annotated_uri_id,
                                                                           party_id );

CREATE TABLE party_party_scope_gp_unit (
    gp_unit_id  NUMBER NOT NULL,
    party_id    NUMBER NOT NULL
);

ALTER TABLE party_party_scope_gp_unit ADD CONSTRAINT party_party_scope_gp_unit_pk PRIMARY KEY ( gp_unit_id,
                                                                                                 party_id );

CREATE TABLE party_registration (
    count                  INTEGER NOT NULL,
    party_registration_id  NUMBER NOT NULL,
    party_id               NUMBER NOT NULL,
    gp_unit_id             NUMBER NOT NULL,
    reporting_unit_id      NUMBER NOT NULL
);

ALTER TABLE party_registration ADD CONSTRAINT party_registration_pk PRIMARY KEY ( party_registration_id );

CREATE TABLE party_selection (
    contest_selection_id  NUMBER NOT NULL,
    party_selection_id    NUMBER NOT NULL
);

ALTER TABLE party_selection ADD CONSTRAINT party_selection_pk PRIMARY KEY ( contest_selection_id );

ALTER TABLE party_selection ADD CONSTRAINT party_selection_party_selection_id_un UNIQUE ( party_selection_id );

CREATE TABLE party_selection_party (
    party_id              NUMBER NOT NULL,
    contest_selection_id  NUMBER NOT NULL
);

ALTER TABLE party_selection_party ADD CONSTRAINT party_selection_party_pk PRIMARY KEY ( party_id,
                                                                                         contest_selection_id );

CREATE TABLE person (
    date_of_birth       VARCHAR2(4000),
    first_name          VARCHAR2(4000),
    full_name           VARCHAR2(4000),
    gender              VARCHAR2(4000),
    last_name           VARCHAR2(4000),
    nickname            VARCHAR2(4000),
    prefix              VARCHAR2(4000),
    profession          VARCHAR2(4000),
    suffix              VARCHAR2(4000),
    title               VARCHAR2(4000),
    person_id           NUMBER NOT NULL,
    election_report_id  NUMBER NOT NULL,
    party_id            NUMBER
);

ALTER TABLE person ADD CONSTRAINT person_pk PRIMARY KEY ( person_id );

CREATE TABLE person_external_identifier (
    external_identifier_id  NUMBER NOT NULL,
    person_id               NUMBER NOT NULL
);

ALTER TABLE person_external_identifier ADD CONSTRAINT person_external_identifier_pk PRIMARY KEY ( external_identifier_id,
                                                                                                   person_id );

CREATE TABLE person_middle_name (
    middle_name            VARCHAR2(4000),
    person_middle_name_id  NUMBER NOT NULL,
    person_id              NUMBER NOT NULL
);

ALTER TABLE person_middle_name ADD CONSTRAINT person_middle_name_pk PRIMARY KEY ( person_middle_name_id );

CREATE TABLE reporting_device (
    gp_unit_id           NUMBER NOT NULL,
    serial_number        VARCHAR2(4000),
    reporting_device_id  NUMBER NOT NULL
);

ALTER TABLE reporting_device ADD CONSTRAINT reporting_device_pk PRIMARY KEY ( gp_unit_id );

ALTER TABLE reporting_device ADD CONSTRAINT reporting_device_reporting_device_id_un UNIQUE ( reporting_device_id );

CREATE TABLE reporting_device_device_class (
    device_class_id  NUMBER NOT NULL,
    gp_unit_id       NUMBER NOT NULL
);

ALTER TABLE reporting_device_device_class ADD CONSTRAINT reporting_device_device_class_pk PRIMARY KEY ( device_class_id,
                                                                                                         gp_unit_id );

CREATE TABLE reporting_unit (
    is_districted               NUMBER,
    is_mail_only                NUMBER,
    "NUMBER"                    VARCHAR2(4000),
    other_type                  VARCHAR2(4000),
    sub_units_reported          INTEGER,
    total_sub_units             INTEGER,
    type                        VARCHAR2(50) NOT NULL,
    voters_participated         INTEGER,
    voters_registered           INTEGER,
    reporting_unit_id           NUMBER NOT NULL,
    gp_unit_id                  NUMBER NOT NULL,
    contact_information_id      NUMBER,
    election_administration_id  NUMBER,
    spatial_dimension_id        NUMBER
);

ALTER TABLE reporting_unit
    ADD CHECK ( type IN (
        'ballot-batch',
        'ballot-style-area',
        'borough',
        'city',
        'city-council',
        'combined-precinct',
        'congressional',
        'country',
        'county',
        'county-council',
        'drop-box',
        'judicial',
        'municipality',
        'other',
        'polling-place',
        'precinct',
        'school',
        'special',
        'split-precinct',
        'state',
        'state-house',
        'state-senate',
        'town',
        'township',
        'utility',
        'village',
        'vote-center',
        'ward',
        'water'
    ) );

CREATE UNIQUE INDEX reporting_unit_idx ON
    reporting_unit (
        contact_information_id
    ASC );

CREATE UNIQUE INDEX reporting_unit_idxv1 ON
    reporting_unit (
        election_administration_id
    ASC );

CREATE UNIQUE INDEX reporting_unit_idxv2 ON
    reporting_unit (
        spatial_dimension_id
    ASC );

ALTER TABLE reporting_unit ADD CONSTRAINT reporting_unit_pk PRIMARY KEY ( gp_unit_id,
                                                                          reporting_unit_id );

ALTER TABLE reporting_unit ADD CONSTRAINT reporting_unit_reporting_unit_id_un UNIQUE ( reporting_unit_id );

CREATE TABLE reporting_unit_authority (
    person_id          NUMBER NOT NULL,
    gp_unit_id         NUMBER NOT NULL,
    reporting_unit_id  NUMBER NOT NULL
);

ALTER TABLE reporting_unit_authority
    ADD CONSTRAINT reporting_unit_authority_pk PRIMARY KEY ( person_id,
                                                              gp_unit_id,
                                                              reporting_unit_id );

CREATE TABLE reporting_unit_count_status (
    count_status_id    NUMBER NOT NULL,
    gp_unit_id         NUMBER NOT NULL,
    reporting_unit_id  NUMBER NOT NULL
);

ALTER TABLE reporting_unit_count_status
    ADD CONSTRAINT reporting_unit_count_status_pk PRIMARY KEY ( count_status_id,
                                                                 gp_unit_id,
                                                                 reporting_unit_id );

CREATE TABLE retention_contest (
    contest_id            NUMBER NOT NULL,
    retention_contest_id  NUMBER NOT NULL,
    candidate_id          NUMBER NOT NULL,
    office_id             NUMBER
);

ALTER TABLE retention_contest ADD CONSTRAINT retention_contest_pk PRIMARY KEY ( contest_id );

ALTER TABLE retention_contest ADD CONSTRAINT retention_contest_retention_contest_id_un UNIQUE ( retention_contest_id );

CREATE TABLE schedule (
    end_date                VARCHAR2(4000),
    is_only_by_appointment  NUMBER,
    is_or_by_appointment    NUMBER,
    is_subject_to_change    NUMBER,
    label                   VARCHAR2(4000),
    start_date              VARCHAR2(4000),
    schedule_id             NUMBER NOT NULL,
    contact_information_id  NUMBER NOT NULL
);

ALTER TABLE schedule ADD CONSTRAINT schedule_pk PRIMARY KEY ( schedule_id );

CREATE TABLE spatial_dimension (
    spatial_dimension_id  NUMBER NOT NULL,
    spatial_extent_id     NUMBER
);

CREATE UNIQUE INDEX spatial_dimension_idx ON
    spatial_dimension (
        spatial_extent_id
    ASC );

ALTER TABLE spatial_dimension ADD CONSTRAINT spatial_dimension_pk PRIMARY KEY ( spatial_dimension_id );

CREATE TABLE spatial_dimension_map_uri (
    annotated_uri_id      NUMBER NOT NULL,
    spatial_dimension_id  NUMBER NOT NULL
);

ALTER TABLE spatial_dimension_map_uri ADD CONSTRAINT spatial_dimension_map_uri_pk PRIMARY KEY ( annotated_uri_id,
                                                                                                 spatial_dimension_id );

CREATE TABLE spatial_extent (
    coordinates        VARCHAR2(4000) NOT NULL,
    format             VARCHAR2(50) NOT NULL,
    spatial_extent_id  NUMBER NOT NULL
);

ALTER TABLE spatial_extent
    ADD CHECK ( format IN (
        'geo-json',
        'gml',
        'kml',
        'shp',
        'wkt'
    ) );

ALTER TABLE spatial_extent ADD CONSTRAINT spatial_extent_pk PRIMARY KEY ( spatial_extent_id );

CREATE TABLE term (
    end_date    VARCHAR2(4000),
    label       VARCHAR2(4000),
    start_date  VARCHAR2(4000),
    type        VARCHAR2(50),
    term_id     NUMBER NOT NULL
);

ALTER TABLE term
    ADD CHECK ( type IN (
        'full-term',
        'unexpired-term'
    ) );

ALTER TABLE term ADD CONSTRAINT term_pk PRIMARY KEY ( term_id );

CREATE TABLE vote_counts (
    counts_id             NUMBER NOT NULL,
    count                 NUMBER NOT NULL,
    vote_counts_id        NUMBER NOT NULL,
    contest_selection_id  NUMBER NOT NULL
);

ALTER TABLE vote_counts ADD CONSTRAINT vote_counts_pk PRIMARY KEY ( counts_id );

ALTER TABLE vote_counts ADD CONSTRAINT vote_counts_vote_counts_id_un UNIQUE ( vote_counts_id );

ALTER TABLE ballot_counts
    ADD CONSTRAINT ballot_counts_counts_fk FOREIGN KEY ( counts_id )
        REFERENCES counts ( counts_id );

ALTER TABLE ballot_counts
    ADD CONSTRAINT ballot_counts_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE ballot_measure_contest_info_uri
    ADD CONSTRAINT ballot_measure_contest_info_uri_annotated_uri_fk FOREIGN KEY ( annotated_uri_id )
        REFERENCES annotated_uri ( annotated_uri_id );

ALTER TABLE ballot_measure_contest_info_uri
    ADD CONSTRAINT ballot_measure_contest_info_uri_ballot_measure_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES ballot_measure_contest ( contest_id );

ALTER TABLE ballot_measure_contest
    ADD CONSTRAINT ballot_measure_contest_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE ballot_measure_selection_external_identifier
    ADD CONSTRAINT ballot_measure_selection_external_identifier_ballot_measure_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES ballot_measure_selection ( contest_selection_id );

ALTER TABLE ballot_measure_selection_external_identifier
    ADD CONSTRAINT ballot_measure_selection_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE ballot_measure_selection
    ADD CONSTRAINT ballot_measure_selection_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE ballot_style_external_identifier
    ADD CONSTRAINT ballot_style_external_identifier_ballot_style_fk FOREIGN KEY ( ballot_style_id )
        REFERENCES ballot_style ( ballot_style_id );

ALTER TABLE ballot_style_external_identifier
    ADD CONSTRAINT ballot_style_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE ballot_style_gp_unit
    ADD CONSTRAINT ballot_style_gp_unit_ballot_style_fk FOREIGN KEY ( ballot_style_id )
        REFERENCES ballot_style ( ballot_style_id );

ALTER TABLE ballot_style_gp_unit
    ADD CONSTRAINT ballot_style_gp_unit_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE ballot_style_image_uri
    ADD CONSTRAINT ballot_style_image_uri_annotated_uri_fk FOREIGN KEY ( annotated_uri_id )
        REFERENCES annotated_uri ( annotated_uri_id );

ALTER TABLE ballot_style_image_uri
    ADD CONSTRAINT ballot_style_image_uri_ballot_style_fk FOREIGN KEY ( ballot_style_id )
        REFERENCES ballot_style ( ballot_style_id );

ALTER TABLE ballot_style_party
    ADD CONSTRAINT ballot_style_party_ballot_style_fk FOREIGN KEY ( ballot_style_id )
        REFERENCES ballot_style ( ballot_style_id );

ALTER TABLE ballot_style_party
    ADD CONSTRAINT ballot_style_party_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE ballot_style
    ADD CONSTRAINT ballot_style_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE candidate_external_identifier
    ADD CONSTRAINT candidate_external_identifier_candidate_fk FOREIGN KEY ( candidate_id )
        REFERENCES candidate ( candidate_id );

ALTER TABLE candidate_external_identifier
    ADD CONSTRAINT candidate_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE candidate
    ADD CONSTRAINT candidate_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE candidate_contest_office
    ADD CONSTRAINT candidate_contest_office_candidate_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES candidate_contest ( contest_id );

ALTER TABLE candidate_contest_office
    ADD CONSTRAINT candidate_contest_office_office_fk FOREIGN KEY ( office_id )
        REFERENCES office ( office_id );

ALTER TABLE candidate_contest_primary_party
    ADD CONSTRAINT candidate_contest_primary_party_candidate_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES candidate_contest ( contest_id );

ALTER TABLE candidate_contest_primary_party
    ADD CONSTRAINT candidate_contest_primary_party_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE candidate_contest
    ADD CONSTRAINT candidate_contest_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE candidate
    ADD CONSTRAINT candidate_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE candidate
    ADD CONSTRAINT candidate_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE candidate
    ADD CONSTRAINT candidate_person_fk FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

ALTER TABLE candidate_selection_candidate
    ADD CONSTRAINT candidate_selection_candidate_candidate_fk FOREIGN KEY ( candidate_id )
        REFERENCES candidate ( candidate_id );

ALTER TABLE candidate_selection_candidate
    ADD CONSTRAINT candidate_selection_candidate_candidate_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES candidate_selection ( contest_selection_id );

ALTER TABLE candidate_selection_endorsement_party
    ADD CONSTRAINT candidate_selection_endorsement_party_candidate_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES candidate_selection ( contest_selection_id );

ALTER TABLE candidate_selection_endorsement_party
    ADD CONSTRAINT candidate_selection_endorsement_party_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE candidate_selection
    ADD CONSTRAINT candidate_selection_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE coalition_contest
    ADD CONSTRAINT coalition_contest_coalition_fk FOREIGN KEY ( party_id )
        REFERENCES coalition ( party_id );

ALTER TABLE coalition_contest
    ADD CONSTRAINT coalition_contest_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE coalition_party
    ADD CONSTRAINT coalition_party_coalition_fk FOREIGN KEY ( party_id1 )
        REFERENCES coalition ( party_id );

ALTER TABLE coalition_party
    ADD CONSTRAINT coalition_party_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE coalition
    ADD CONSTRAINT coalition_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE contact_information_email
    ADD CONSTRAINT contact_information_email_annotated_string_fk FOREIGN KEY ( annotated_string_id )
        REFERENCES annotated_string ( annotated_string_id );

ALTER TABLE contact_information_email
    ADD CONSTRAINT contact_information_email_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE contact_information_fax
    ADD CONSTRAINT contact_information_fax_annotated_string_fk FOREIGN KEY ( annotated_string_id )
        REFERENCES annotated_string ( annotated_string_id );

ALTER TABLE contact_information_fax
    ADD CONSTRAINT contact_information_fax_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE contact_information_phone
    ADD CONSTRAINT contact_information_phone_annotated_string_fk FOREIGN KEY ( annotated_string_id )
        REFERENCES annotated_string ( annotated_string_id );

ALTER TABLE contact_information_phone
    ADD CONSTRAINT contact_information_phone_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE contact_information_uri
    ADD CONSTRAINT contact_information_uri_annotated_uri_fk FOREIGN KEY ( annotated_uri_id )
        REFERENCES annotated_uri ( annotated_uri_id );

ALTER TABLE contact_information_uri
    ADD CONSTRAINT contact_information_uri_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE contact_information_address_line
    ADD CONSTRAINT contact_information_address_line_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE contact_information
    ADD CONSTRAINT contact_information_lat_lng_fk FOREIGN KEY ( lat_lng_id )
        REFERENCES lat_lng ( lat_lng_id );

ALTER TABLE contact_information
    ADD CONSTRAINT contact_information_person_fk FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

ALTER TABLE contest_count_status
    ADD CONSTRAINT contest_count_status_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE contest_count_status
    ADD CONSTRAINT contest_count_status_count_status_fk FOREIGN KEY ( count_status_id )
        REFERENCES count_status ( count_status_id );

ALTER TABLE contest_external_identifier
    ADD CONSTRAINT contest_external_identifier_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE contest_external_identifier
    ADD CONSTRAINT contest_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE contest
    ADD CONSTRAINT contest_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE contest
    ADD CONSTRAINT contest_reporting_unit_fk FOREIGN KEY ( gp_unit_id,
                                                           reporting_unit_id )
        REFERENCES reporting_unit ( gp_unit_id,
                                    reporting_unit_id );

ALTER TABLE contest_selection
    ADD CONSTRAINT contest_selection_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE counts_device_class
    ADD CONSTRAINT counts_device_class_counts_fk FOREIGN KEY ( counts_id )
        REFERENCES counts ( counts_id );

ALTER TABLE counts_device_class
    ADD CONSTRAINT counts_device_class_device_class_fk FOREIGN KEY ( device_class_id )
        REFERENCES device_class ( device_class_id );

ALTER TABLE counts
    ADD CONSTRAINT counts_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE election_count_status
    ADD CONSTRAINT election_count_status_count_status_fk FOREIGN KEY ( count_status_id )
        REFERENCES count_status ( count_status_id );

ALTER TABLE election_count_status
    ADD CONSTRAINT election_count_status_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE election_external_identifier
    ADD CONSTRAINT election_external_identifier_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE election_external_identifier
    ADD CONSTRAINT election_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE election_administration_election_official_person
    ADD CONSTRAINT election_administration_election_official_person_election_administration_fk FOREIGN KEY ( election_administration_id )
        REFERENCES election_administration ( election_administration_id );

ALTER TABLE election_administration_election_official_person
    ADD CONSTRAINT election_administration_election_official_person_person_fk FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

ALTER TABLE election_administration
    ADD CONSTRAINT election_administration_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE election
    ADD CONSTRAINT election_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE election
    ADD CONSTRAINT election_election_report_fk FOREIGN KEY ( election_report_id )
        REFERENCES election_report ( election_report_id );

ALTER TABLE election_report_external_identifier
    ADD CONSTRAINT election_report_external_identifier_election_report_fk FOREIGN KEY ( election_report_id )
        REFERENCES election_report ( election_report_id );

ALTER TABLE election_report_external_identifier
    ADD CONSTRAINT election_report_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE election
    ADD CONSTRAINT election_reporting_unit_fk FOREIGN KEY ( gp_unit_id,
                                                            reporting_unit_id )
        REFERENCES reporting_unit ( gp_unit_id,
                                    reporting_unit_id );

ALTER TABLE gp_unit_composing_gp_unit
    ADD CONSTRAINT gp_unit_composing_gp_unit_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE gp_unit_composing_gp_unit
    ADD CONSTRAINT gp_unit_composing_gp_unit_gp_unit_fkv1 FOREIGN KEY ( gp_unit_id1 )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE gp_unit_external_identifier
    ADD CONSTRAINT gp_unit_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE gp_unit_external_identifier
    ADD CONSTRAINT gp_unit_external_identifier_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE gp_unit
    ADD CONSTRAINT gp_unit_election_report_fk FOREIGN KEY ( election_report_id )
        REFERENCES election_report ( election_report_id );

ALTER TABLE header_external_identifier
    ADD CONSTRAINT header_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE header_external_identifier
    ADD CONSTRAINT header_external_identifier_header_fk FOREIGN KEY ( header_id )
        REFERENCES header ( header_id );

ALTER TABLE header
    ADD CONSTRAINT header_election_report_fk FOREIGN KEY ( election_report_id )
        REFERENCES election_report ( election_report_id );

ALTER TABLE hours
    ADD CONSTRAINT hours_schedule_fk FOREIGN KEY ( schedule_id )
        REFERENCES schedule ( schedule_id );

ALTER TABLE office_external_identifier
    ADD CONSTRAINT office_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE office_external_identifier
    ADD CONSTRAINT office_external_identifier_office_fk FOREIGN KEY ( office_id )
        REFERENCES office ( office_id );

ALTER TABLE office_office_holder_person
    ADD CONSTRAINT office_office_holder_person_office_fk FOREIGN KEY ( office_id )
        REFERENCES office ( office_id );

ALTER TABLE office_office_holder_person
    ADD CONSTRAINT office_office_holder_person_person_fk FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

ALTER TABLE office
    ADD CONSTRAINT office_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE office
    ADD CONSTRAINT office_election_report_fk FOREIGN KEY ( election_report_id )
        REFERENCES election_report ( election_report_id );

ALTER TABLE office_group_office
    ADD CONSTRAINT office_group_office_office_fk FOREIGN KEY ( office_id )
        REFERENCES office ( office_id );

ALTER TABLE office_group_office
    ADD CONSTRAINT office_group_office_office_group_fk FOREIGN KEY ( office_group_id )
        REFERENCES office_group ( office_group_id );

ALTER TABLE office_group
    ADD CONSTRAINT office_group_election_report_fk FOREIGN KEY ( election_report_id )
        REFERENCES election_report ( election_report_id );

ALTER TABLE office_group
    ADD CONSTRAINT office_group_office_group_fk FOREIGN KEY ( office_group_id1 )
        REFERENCES office_group ( office_group_id );

ALTER TABLE office
    ADD CONSTRAINT office_reporting_unit_fk FOREIGN KEY ( gp_unit_id,
                                                          reporting_unit_id )
        REFERENCES reporting_unit ( gp_unit_id,
                                    reporting_unit_id );

ALTER TABLE office
    ADD CONSTRAINT office_term_fk FOREIGN KEY ( term_id )
        REFERENCES term ( term_id );

ALTER TABLE ordered_content
    ADD CONSTRAINT ordered_content_ballot_style_fk FOREIGN KEY ( ballot_style_id )
        REFERENCES ballot_style ( ballot_style_id );

ALTER TABLE ordered_content
    ADD CONSTRAINT ordered_content_ordered_header_fk FOREIGN KEY ( ordered_content_id1,
                                                                   ordered_header_id )
        REFERENCES ordered_header ( ordered_content_id,
                                    ordered_header_id );

ALTER TABLE ordered_contest_ordered_contest_selection
    ADD CONSTRAINT ordered_contest_ordered_contest_selection_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE ordered_contest_ordered_contest_selection
    ADD CONSTRAINT ordered_contest_ordered_contest_selection_ordered_contest_fk FOREIGN KEY ( ordered_content_id )
        REFERENCES ordered_contest ( ordered_content_id );

ALTER TABLE ordered_contest
    ADD CONSTRAINT ordered_contest_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE ordered_contest
    ADD CONSTRAINT ordered_contest_ordered_content_fk FOREIGN KEY ( ordered_content_id )
        REFERENCES ordered_content ( ordered_content_id );

ALTER TABLE ordered_header
    ADD CONSTRAINT ordered_header_header_fk FOREIGN KEY ( header_id )
        REFERENCES header ( header_id );

ALTER TABLE ordered_header
    ADD CONSTRAINT ordered_header_ordered_content_fk FOREIGN KEY ( ordered_content_id )
        REFERENCES ordered_content ( ordered_content_id );

ALTER TABLE other_counts_device_class
    ADD CONSTRAINT other_counts_device_class_device_class_fk FOREIGN KEY ( device_class_id )
        REFERENCES device_class ( device_class_id );

ALTER TABLE other_counts_device_class
    ADD CONSTRAINT other_counts_device_class_other_counts_fk FOREIGN KEY ( other_counts_id )
        REFERENCES other_counts ( other_counts_id );

ALTER TABLE other_counts
    ADD CONSTRAINT other_counts_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE other_counts
    ADD CONSTRAINT other_counts_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE party_external_identifier
    ADD CONSTRAINT party_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE party_external_identifier
    ADD CONSTRAINT party_external_identifier_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE party_leader_person
    ADD CONSTRAINT party_leader_person_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE party_leader_person
    ADD CONSTRAINT party_leader_person_person_fk FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

ALTER TABLE party_logo_uri
    ADD CONSTRAINT party_logo_uri_annotated_uri_fk FOREIGN KEY ( annotated_uri_id )
        REFERENCES annotated_uri ( annotated_uri_id );

ALTER TABLE party_logo_uri
    ADD CONSTRAINT party_logo_uri_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE party_party_scope_gp_unit
    ADD CONSTRAINT party_party_scope_gp_unit_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE party_party_scope_gp_unit
    ADD CONSTRAINT party_party_scope_gp_unit_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE party
    ADD CONSTRAINT party_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE party_contest
    ADD CONSTRAINT party_contest_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE party
    ADD CONSTRAINT party_election_report_fk FOREIGN KEY ( election_report_id )
        REFERENCES election_report ( election_report_id );

ALTER TABLE party_registration
    ADD CONSTRAINT party_registration_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE party_registration
    ADD CONSTRAINT party_registration_reporting_unit_fk FOREIGN KEY ( gp_unit_id,
                                                                      reporting_unit_id )
        REFERENCES reporting_unit ( gp_unit_id,
                                    reporting_unit_id );

ALTER TABLE party_selection_party
    ADD CONSTRAINT party_selection_party_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE party_selection_party
    ADD CONSTRAINT party_selection_party_party_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES party_selection ( contest_selection_id );

ALTER TABLE party_selection
    ADD CONSTRAINT party_selection_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE person_external_identifier
    ADD CONSTRAINT person_external_identifier_external_identifier_fk FOREIGN KEY ( external_identifier_id )
        REFERENCES external_identifier ( external_identifier_id );

ALTER TABLE person_external_identifier
    ADD CONSTRAINT person_external_identifier_person_fk FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

ALTER TABLE person
    ADD CONSTRAINT person_election_report_fk FOREIGN KEY ( election_report_id )
        REFERENCES election_report ( election_report_id );

ALTER TABLE person_middle_name
    ADD CONSTRAINT person_middle_name_person_fk FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

ALTER TABLE person
    ADD CONSTRAINT person_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE reporting_device_device_class
    ADD CONSTRAINT reporting_device_device_class_device_class_fk FOREIGN KEY ( device_class_id )
        REFERENCES device_class ( device_class_id );

ALTER TABLE reporting_device_device_class
    ADD CONSTRAINT reporting_device_device_class_reporting_device_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES reporting_device ( gp_unit_id );

ALTER TABLE reporting_device
    ADD CONSTRAINT reporting_device_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE reporting_unit_authority
    ADD CONSTRAINT reporting_unit_authority_person_fk FOREIGN KEY ( person_id )
        REFERENCES person ( person_id );

ALTER TABLE reporting_unit_authority
    ADD CONSTRAINT reporting_unit_authority_reporting_unit_fk FOREIGN KEY ( gp_unit_id,
                                                                             reporting_unit_id )
        REFERENCES reporting_unit ( gp_unit_id,
                                    reporting_unit_id );

ALTER TABLE reporting_unit_count_status
    ADD CONSTRAINT reporting_unit_count_status_count_status_fk FOREIGN KEY ( count_status_id )
        REFERENCES count_status ( count_status_id );

ALTER TABLE reporting_unit_count_status
    ADD CONSTRAINT reporting_unit_count_status_reporting_unit_fk FOREIGN KEY ( gp_unit_id,
                                                                                reporting_unit_id )
        REFERENCES reporting_unit ( gp_unit_id,
                                    reporting_unit_id );

ALTER TABLE reporting_unit
    ADD CONSTRAINT reporting_unit_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE reporting_unit
    ADD CONSTRAINT reporting_unit_election_administration_fk FOREIGN KEY ( election_administration_id )
        REFERENCES election_administration ( election_administration_id );

ALTER TABLE reporting_unit
    ADD CONSTRAINT reporting_unit_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE reporting_unit
    ADD CONSTRAINT reporting_unit_spatial_dimension_fk FOREIGN KEY ( spatial_dimension_id )
        REFERENCES spatial_dimension ( spatial_dimension_id );

ALTER TABLE retention_contest
    ADD CONSTRAINT retention_contest_ballot_measure_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES ballot_measure_contest ( contest_id );

ALTER TABLE retention_contest
    ADD CONSTRAINT retention_contest_candidate_fk FOREIGN KEY ( candidate_id )
        REFERENCES candidate ( candidate_id );

ALTER TABLE retention_contest
    ADD CONSTRAINT retention_contest_office_fk FOREIGN KEY ( office_id )
        REFERENCES office ( office_id );

ALTER TABLE schedule
    ADD CONSTRAINT schedule_contact_information_fk FOREIGN KEY ( contact_information_id )
        REFERENCES contact_information ( contact_information_id );

ALTER TABLE spatial_dimension_map_uri
    ADD CONSTRAINT spatial_dimension_map_uri_annotated_uri_fk FOREIGN KEY ( annotated_uri_id )
        REFERENCES annotated_uri ( annotated_uri_id );

ALTER TABLE spatial_dimension_map_uri
    ADD CONSTRAINT spatial_dimension_map_uri_spatial_dimension_fk FOREIGN KEY ( spatial_dimension_id )
        REFERENCES spatial_dimension ( spatial_dimension_id );

ALTER TABLE spatial_dimension
    ADD CONSTRAINT spatial_dimension_spatial_extent_fk FOREIGN KEY ( spatial_extent_id )
        REFERENCES spatial_extent ( spatial_extent_id );

ALTER TABLE vote_counts
    ADD CONSTRAINT vote_counts_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE vote_counts
    ADD CONSTRAINT vote_counts_counts_fk FOREIGN KEY ( counts_id )
        REFERENCES counts ( counts_id );

--  ERROR: No Discriminator Column found in Arc FKArc_4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_4 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_3 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_5 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated

CREATE SEQUENCE annotated_string_annotated_string_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER annotated_string_annotated_string_id_trg BEFORE
    INSERT ON annotated_string
    FOR EACH ROW
    WHEN ( new.annotated_string_id IS NULL )
BEGIN
    :new.annotated_string_id := annotated_string_annotated_string_id_seq.nextval;
END;
/

CREATE SEQUENCE annotated_uri_annotated_uri_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER annotated_uri_annotated_uri_id_trg BEFORE
    INSERT ON annotated_uri
    FOR EACH ROW
    WHEN ( new.annotated_uri_id IS NULL )
BEGIN
    :new.annotated_uri_id := annotated_uri_annotated_uri_id_seq.nextval;
END;
/

CREATE SEQUENCE ballot_counts_ballot_counts_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ballot_counts_ballot_counts_id_trg BEFORE
    INSERT ON ballot_counts
    FOR EACH ROW
    WHEN ( new.ballot_counts_id IS NULL )
BEGIN
    :new.ballot_counts_id := ballot_counts_ballot_counts_id_seq.nextval;
END;
/

CREATE SEQUENCE ballot_measure_contest_ballot_measure_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ballot_measure_contest_ballot_measure_contest_id_trg BEFORE
    INSERT ON ballot_measure_contest
    FOR EACH ROW
    WHEN ( new.ballot_measure_contest_id IS NULL )
BEGIN
    :new.ballot_measure_contest_id := ballot_measure_contest_ballot_measure_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE ballot_measure_selection_ballot_measure_selection_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ballot_measure_selection_ballot_measure_selection_id_trg BEFORE
    INSERT ON ballot_measure_selection
    FOR EACH ROW
    WHEN ( new.ballot_measure_selection_id IS NULL )
BEGIN
    :new.ballot_measure_selection_id := ballot_measure_selection_ballot_measure_selection_id_seq.nextval;
END;
/

CREATE SEQUENCE ballot_style_ballot_style_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ballot_style_ballot_style_id_trg BEFORE
    INSERT ON ballot_style
    FOR EACH ROW
    WHEN ( new.ballot_style_id IS NULL )
BEGIN
    :new.ballot_style_id := ballot_style_ballot_style_id_seq.nextval;
END;
/

CREATE SEQUENCE candidate_candidate_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER candidate_candidate_id_trg BEFORE
    INSERT ON candidate
    FOR EACH ROW
    WHEN ( new.candidate_id IS NULL )
BEGIN
    :new.candidate_id := candidate_candidate_id_seq.nextval;
END;
/

CREATE SEQUENCE candidate_contest_candidate_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER candidate_contest_candidate_contest_id_trg BEFORE
    INSERT ON candidate_contest
    FOR EACH ROW
    WHEN ( new.candidate_contest_id IS NULL )
BEGIN
    :new.candidate_contest_id := candidate_contest_candidate_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE candidate_selection_candidate_selection_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER candidate_selection_candidate_selection_id_trg BEFORE
    INSERT ON candidate_selection
    FOR EACH ROW
    WHEN ( new.candidate_selection_id IS NULL )
BEGIN
    :new.candidate_selection_id := candidate_selection_candidate_selection_id_seq.nextval;
END;
/

CREATE SEQUENCE coalition_coalition_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER coalition_coalition_id_trg BEFORE
    INSERT ON coalition
    FOR EACH ROW
    WHEN ( new.coalition_id IS NULL )
BEGIN
    :new.coalition_id := coalition_coalition_id_seq.nextval;
END;
/

CREATE SEQUENCE contact_information_contact_information_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER contact_information_contact_information_id_trg BEFORE
    INSERT ON contact_information
    FOR EACH ROW
    WHEN ( new.contact_information_id IS NULL )
BEGIN
    :new.contact_information_id := contact_information_contact_information_id_seq.nextval;
END;
/

CREATE SEQUENCE contact_information_address_line_contact_information_address_line_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER contact_information_address_line_contact_information_address_line_id_trg BEFORE
    INSERT ON contact_information_address_line
    FOR EACH ROW
    WHEN ( new.contact_information_address_line_id IS NULL )
BEGIN
    :new.contact_information_address_line_id := contact_information_address_line_contact_information_address_line_id_seq.nextval;
END;
/

CREATE SEQUENCE contest_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER contest_contest_id_trg BEFORE
    INSERT ON contest
    FOR EACH ROW
    WHEN ( new.contest_id IS NULL )
BEGIN
    :new.contest_id := contest_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE contest_selection_contest_selection_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER contest_selection_contest_selection_id_trg BEFORE
    INSERT ON contest_selection
    FOR EACH ROW
    WHEN ( new.contest_selection_id IS NULL )
BEGIN
    :new.contest_selection_id := contest_selection_contest_selection_id_seq.nextval;
END;
/

CREATE SEQUENCE count_status_count_status_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER count_status_count_status_id_trg BEFORE
    INSERT ON count_status
    FOR EACH ROW
    WHEN ( new.count_status_id IS NULL )
BEGIN
    :new.count_status_id := count_status_count_status_id_seq.nextval;
END;
/

CREATE SEQUENCE counts_counts_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER counts_counts_id_trg BEFORE
    INSERT ON counts
    FOR EACH ROW
    WHEN ( new.counts_id IS NULL )
BEGIN
    :new.counts_id := counts_counts_id_seq.nextval;
END;
/

CREATE SEQUENCE device_class_device_class_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER device_class_device_class_id_trg BEFORE
    INSERT ON device_class
    FOR EACH ROW
    WHEN ( new.device_class_id IS NULL )
BEGIN
    :new.device_class_id := device_class_device_class_id_seq.nextval;
END;
/

CREATE SEQUENCE election_election_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER election_election_id_trg BEFORE
    INSERT ON election
    FOR EACH ROW
    WHEN ( new.election_id IS NULL )
BEGIN
    :new.election_id := election_election_id_seq.nextval;
END;
/

CREATE SEQUENCE election_administration_election_administration_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER election_administration_election_administration_id_trg BEFORE
    INSERT ON election_administration
    FOR EACH ROW
    WHEN ( new.election_administration_id IS NULL )
BEGIN
    :new.election_administration_id := election_administration_election_administration_id_seq.nextval;
END;
/

CREATE SEQUENCE election_report_election_report_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER election_report_election_report_id_trg BEFORE
    INSERT ON election_report
    FOR EACH ROW
    WHEN ( new.election_report_id IS NULL )
BEGIN
    :new.election_report_id := election_report_election_report_id_seq.nextval;
END;
/

CREATE SEQUENCE external_identifier_external_identifier_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER external_identifier_external_identifier_id_trg BEFORE
    INSERT ON external_identifier
    FOR EACH ROW
    WHEN ( new.external_identifier_id IS NULL )
BEGIN
    :new.external_identifier_id := external_identifier_external_identifier_id_seq.nextval;
END;
/

CREATE SEQUENCE gp_unit_gp_unit_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER gp_unit_gp_unit_id_trg BEFORE
    INSERT ON gp_unit
    FOR EACH ROW
    WHEN ( new.gp_unit_id IS NULL )
BEGIN
    :new.gp_unit_id := gp_unit_gp_unit_id_seq.nextval;
END;
/

CREATE SEQUENCE header_header_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER header_header_id_trg BEFORE
    INSERT ON header
    FOR EACH ROW
    WHEN ( new.header_id IS NULL )
BEGIN
    :new.header_id := header_header_id_seq.nextval;
END;
/

CREATE SEQUENCE hours_hours_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER hours_hours_id_trg BEFORE
    INSERT ON hours
    FOR EACH ROW
    WHEN ( new.hours_id IS NULL )
BEGIN
    :new.hours_id := hours_hours_id_seq.nextval;
END;
/

CREATE SEQUENCE lat_lng_lat_lng_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER lat_lng_lat_lng_id_trg BEFORE
    INSERT ON lat_lng
    FOR EACH ROW
    WHEN ( new.lat_lng_id IS NULL )
BEGIN
    :new.lat_lng_id := lat_lng_lat_lng_id_seq.nextval;
END;
/

CREATE SEQUENCE office_office_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER office_office_id_trg BEFORE
    INSERT ON office
    FOR EACH ROW
    WHEN ( new.office_id IS NULL )
BEGIN
    :new.office_id := office_office_id_seq.nextval;
END;
/

CREATE SEQUENCE office_group_office_group_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER office_group_office_group_id_trg BEFORE
    INSERT ON office_group
    FOR EACH ROW
    WHEN ( new.office_group_id IS NULL )
BEGIN
    :new.office_group_id := office_group_office_group_id_seq.nextval;
END;
/

CREATE SEQUENCE ordered_content_ordered_content_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ordered_content_ordered_content_id_trg BEFORE
    INSERT ON ordered_content
    FOR EACH ROW
    WHEN ( new.ordered_content_id IS NULL )
BEGIN
    :new.ordered_content_id := ordered_content_ordered_content_id_seq.nextval;
END;
/

CREATE SEQUENCE ordered_contest_ordered_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ordered_contest_ordered_contest_id_trg BEFORE
    INSERT ON ordered_contest
    FOR EACH ROW
    WHEN ( new.ordered_contest_id IS NULL )
BEGIN
    :new.ordered_contest_id := ordered_contest_ordered_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE ordered_header_ordered_header_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ordered_header_ordered_header_id_trg BEFORE
    INSERT ON ordered_header
    FOR EACH ROW
    WHEN ( new.ordered_header_id IS NULL )
BEGIN
    :new.ordered_header_id := ordered_header_ordered_header_id_seq.nextval;
END;
/

CREATE SEQUENCE other_counts_other_counts_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER other_counts_other_counts_id_trg BEFORE
    INSERT ON other_counts
    FOR EACH ROW
    WHEN ( new.other_counts_id IS NULL )
BEGIN
    :new.other_counts_id := other_counts_other_counts_id_seq.nextval;
END;
/

CREATE SEQUENCE party_party_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER party_party_id_trg BEFORE
    INSERT ON party
    FOR EACH ROW
    WHEN ( new.party_id IS NULL )
BEGIN
    :new.party_id := party_party_id_seq.nextval;
END;
/

CREATE SEQUENCE party_contest_party_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER party_contest_party_contest_id_trg BEFORE
    INSERT ON party_contest
    FOR EACH ROW
    WHEN ( new.party_contest_id IS NULL )
BEGIN
    :new.party_contest_id := party_contest_party_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE party_registration_party_registration_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER party_registration_party_registration_id_trg BEFORE
    INSERT ON party_registration
    FOR EACH ROW
    WHEN ( new.party_registration_id IS NULL )
BEGIN
    :new.party_registration_id := party_registration_party_registration_id_seq.nextval;
END;
/

CREATE SEQUENCE party_selection_party_selection_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER party_selection_party_selection_id_trg BEFORE
    INSERT ON party_selection
    FOR EACH ROW
    WHEN ( new.party_selection_id IS NULL )
BEGIN
    :new.party_selection_id := party_selection_party_selection_id_seq.nextval;
END;
/

CREATE SEQUENCE person_person_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER person_person_id_trg BEFORE
    INSERT ON person
    FOR EACH ROW
    WHEN ( new.person_id IS NULL )
BEGIN
    :new.person_id := person_person_id_seq.nextval;
END;
/

CREATE SEQUENCE person_middle_name_person_middle_name_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER person_middle_name_person_middle_name_id_trg BEFORE
    INSERT ON person_middle_name
    FOR EACH ROW
    WHEN ( new.person_middle_name_id IS NULL )
BEGIN
    :new.person_middle_name_id := person_middle_name_person_middle_name_id_seq.nextval;
END;
/

CREATE SEQUENCE reporting_device_reporting_device_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER reporting_device_reporting_device_id_trg BEFORE
    INSERT ON reporting_device
    FOR EACH ROW
    WHEN ( new.reporting_device_id IS NULL )
BEGIN
    :new.reporting_device_id := reporting_device_reporting_device_id_seq.nextval;
END;
/

CREATE SEQUENCE reporting_unit_reporting_unit_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER reporting_unit_reporting_unit_id_trg BEFORE
    INSERT ON reporting_unit
    FOR EACH ROW
    WHEN ( new.reporting_unit_id IS NULL )
BEGIN
    :new.reporting_unit_id := reporting_unit_reporting_unit_id_seq.nextval;
END;
/

CREATE SEQUENCE retention_contest_retention_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER retention_contest_retention_contest_id_trg BEFORE
    INSERT ON retention_contest
    FOR EACH ROW
    WHEN ( new.retention_contest_id IS NULL )
BEGIN
    :new.retention_contest_id := retention_contest_retention_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE schedule_schedule_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER schedule_schedule_id_trg BEFORE
    INSERT ON schedule
    FOR EACH ROW
    WHEN ( new.schedule_id IS NULL )
BEGIN
    :new.schedule_id := schedule_schedule_id_seq.nextval;
END;
/

CREATE SEQUENCE spatial_dimension_spatial_dimension_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER spatial_dimension_spatial_dimension_id_trg BEFORE
    INSERT ON spatial_dimension
    FOR EACH ROW
    WHEN ( new.spatial_dimension_id IS NULL )
BEGIN
    :new.spatial_dimension_id := spatial_dimension_spatial_dimension_id_seq.nextval;
END;
/

CREATE SEQUENCE spatial_extent_spatial_extent_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER spatial_extent_spatial_extent_id_trg BEFORE
    INSERT ON spatial_extent
    FOR EACH ROW
    WHEN ( new.spatial_extent_id IS NULL )
BEGIN
    :new.spatial_extent_id := spatial_extent_spatial_extent_id_seq.nextval;
END;
/

CREATE SEQUENCE term_term_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER term_term_id_trg BEFORE
    INSERT ON term
    FOR EACH ROW
    WHEN ( new.term_id IS NULL )
BEGIN
    :new.term_id := term_term_id_seq.nextval;
END;
/

CREATE SEQUENCE vote_counts_vote_counts_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER vote_counts_vote_counts_id_trg BEFORE
    INSERT ON vote_counts
    FOR EACH ROW
    WHEN ( new.vote_counts_id IS NULL )
BEGIN
    :new.vote_counts_id := vote_counts_vote_counts_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            87
-- CREATE INDEX                            11
-- ALTER TABLE                            262
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          45
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         45
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                  17
-- WARNINGS                                 0
