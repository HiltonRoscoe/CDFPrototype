<?xml version="1.0" encoding="UTF-8"?>
<?xfa generator="XFA2_4" APIVersion="3.6.14118.0"?>
<xdp:xdp xmlns:xdp="http://ns.adobe.com/xdp/" timeStamp="2018-12-13T15:14:00Z">
	<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">
		<xfa:data>
			<!-- modify EML XML instance below -->
			<EML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:evs:schema:eml" xmlns:ts="urn:oasis:names:tc:evs:schema:eml:ts" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:al="urn:oasis:names:tc:ciq:xal:4" xmlns:nl="urn:oasis:names:tc:ciq:xnl:4" Id="410" SchemaVersion="7.0" xsi:schemaLocation="urn:oasis:names:tc:evs:schema:eml file:///C:/Users/john/Documents/GitHub/RemoteBallotMarking/xsd/410-ballots-v7-0.xsd">
				<!-- this stuff up-front is the stuff that identifies what kind of EML message and how to handle it -->
				<EMLHeader>
					<TransactionId>410</TransactionId>
					<!--a fixed constant value of 410 for this message -->
					<SequenceNumber>1</SequenceNumber>
					<!-- we will always put out 1 message with all ballot types for the jurisdiction's election -->
					<NumberInSequence>1</NumberInSequence>
					<!--so it will always be message 1 of 1 -->
					<SequencedElementName>2014-11-04S1</SequencedElementName>
					<!--this is a name that ties the messages together if you have more than one
           generate it at random but must keep the same if you have 2-of-x, 3-of-x, etc
		   JND using date of election plus stub
  		-->
					<OfficialStatusDetail>
						<OfficialStatus>official</OfficialStatus>
						<!--always use official -->
						<StatusDate>2014-10-16</StatusDate>
						<!--use the current date -->
					</OfficialStatusDetail>
				</EMLHeader>
				<!-- end of up-front stuff -->
				<Ballots>
					<EventIdentifier IdNumber="AK2014General"/>
					<!--This event name is assigned by the EMS -->
					<Ballot>
						<ReportingUnitIdentifier IdNumber="77"/>
						<!--This tells us the polling group the ballot form is for -->
						<Election>
							<ElectionIdentifier IdNumber="2014-11-04G">
								<ElectionName>2014 General Election</ElectionName>
							</ElectionIdentifier>
							<!-- the election name is assigned by the EMS -->
							<Contest DisplayOrder="1">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="1GO">
									<!--unique value for the contest -->
									<ContestName>For Governor and Lieutenant Governor</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<HowToVote>
									<Message>(To vote for Governor and Lieutenant Governor, darken the oval at
							the left of the joint candidates of your choice)</Message>
								</HowToVote>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<!-- FPP for First Past Post, IRV for Instant Runoff / Ranked Choice -->
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1AEF"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Edward FitzGerald and Sharen
									Swartz Neuhardt</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
										<!-- self explanitory -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1AJK"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">
												<body xmlns="http://www.w3.org/1999/xhtml">John Kasich and <br/>
										Mary Taylor</body>
											</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Republican</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1AAR"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">John Wack and Mary Brady</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Unity Ticket</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
									<WriteInCandidate>
										<Name/>
									</WriteInCandidate>
									<WriteInCandidate>
										<Name/>
									</WriteInCandidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="2">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="2AG">
									<!--unique value for the contest -->
									<ContestName>For Attorney General</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<!-- FPP for First Past Post, IRV for Instant Runoff / Ranked Choice -->
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1BDP"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">David Pepper</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
										<!-- self explanitory -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1BMD"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Mike DeWine</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Republican</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="3">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="3AS">
									<!--unique value for the contest -->
									<ContestName>For Auditor of State</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1CBB"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Bob Bridges</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Libertarian</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
										<!-- self explanitory -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1CJC"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">John Patrick
									Carney</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1CDY"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">David Yost</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Republican</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="4">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="4SS">
									<!--unique value for the contest -->
									<ContestName>For Secretary of State</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1DJH"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Jon Husted</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Republican</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
										<!-- self explanitory -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1DKK"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Kevin Knedler</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Libertarian</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1DNT"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Nina Turner</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="5">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="5TS">
									<!--unique value for the contest -->
									<ContestName>For Treasurer of State</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1ECP"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Connie Pillich</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
										<!-- self explanitory -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1EJM"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Josh Mandel</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Republican</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="6">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="6RC">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Representative to
								Congress<br/>(11th District)</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1FMZ"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Mark Zetzer</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Republican</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
										<!-- self explanitory -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1FMF"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Marcia L. Fudge</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="7">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="8SR34">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For State
								Representative<br/>(34th District)</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1GCB"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Cynthia D. Blake</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Republican</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
										<!-- self explanitory -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1GES"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Emilia Sykes</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="8">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="9CC">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Member of <br/> County
								Council at Large</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>3</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1HBR"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Bill Roemer</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Republican</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1HIS"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Ilene Shapiro</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1HDW"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Debbie Walsh</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Republican</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1HJD"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">John A. Donofrio</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1HGH"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Gary Hagen</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1HSK"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Sandra Kurt</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<Affiliation>
											<AffiliationIdentifier>
												<RegisteredName>Democratic</RegisteredName>
											</AffiliationIdentifier>
											<Type/>
										</Affiliation>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="9">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="10SB">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Member of State Board of
								Education<br/>(7th District)</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1IDS"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">David A. Spencer</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1IMC"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Michael Charney</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1ISF"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Sarah E. Fowler</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1ISR"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Sarah Freeman</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="10">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="11JS1">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Justice of the Supreme Court<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/1/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1JTL"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Tom Letson</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1JSK"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Sharon Kennedy</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="11">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="11JS2">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Justice of the Supreme Court<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/2/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1KJO"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">John P. O'Donnell</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1KJF"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Judi French</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="12">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="12CA9">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								Appeals<br/>(9th District)<br/>
											<p style="font-size:8pt;">Full Term Commencing 2/9/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1LTL"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Julie A. Schafer</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1LEB"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Eve Belfance</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="13">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="13CP1">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/2/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1MTO"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Tammy O'Brien</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1MRC"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Ron Cable</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="14">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="14CP2">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/3/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1NTG"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Tavia Baxter
									Galonski</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1NLC"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Lynne S. Callahan</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="15">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="15CP3">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/5/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1OAM"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Alison McCarty</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1OLD"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Lisa Dean</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="16">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="16CP4">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/6/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1PBW"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Beth Whitmore</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1PMR"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Mary Margaret
									Rowlands</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="17">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="17CP5">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>
											<p style="font-size:8pt;">Full Term Commencing 2/9/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1QCC"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Christine Croce</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1QJC"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">John Clark</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="18">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="18CP6">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>
											<p style="font-size:8pt;">Full Term Commencing 5/1/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1RTP"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Tom Parker</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1RRM"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Rob McCarty</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="19">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="19CP7">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/4/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1SJO"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Jon Oldham</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1TM"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Todd McKenney</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="20">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="20CP8">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>(Juvenile Division)<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/1/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1TLT"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Linda Tucci
									Teodosio</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1TJL"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Jill Flagg
									Lanzinger</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="21">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="19CP9">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>(Domestic Relations Division)<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/4/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1UJQ"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">John P. Quinn</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1UKC"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Katarina Cook</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="22">
								<!-- load with the order on the ballot that this contest should be placed -->
								<ContestIdentifier IdNumber="22CP10">
									<!--unique value for the contest -->
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">For Judge of the Court of
								<br/> Common Pleas<br/>(Probate Division)<br/>
											<p style="font-size:8pt;">Full Term Commencing 1/4/2015</p>
										</body>
									</ContestName>
									<!--load with the contest display name -->
								</ContestIdentifier>
								<Rotation>yes</Rotation>
								<!-- valid values are: yes/no -->
								<RotationMethod>Standard</RotationMethod>
								<!-- This is a Token for the method used for rotation -->
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<!-- This is a Token for the choice type -->
								<MaxVotes>1</MaxVotes>
								<!-- self explanitory -->
								<MinVotes>0</MinVotes>
								<!-- self explanitory -->
								<MaxWriteIn>0</MaxWriteIn>
								<!-- self explanitory -->
								<BallotChoices>
									<Candidate>
										<CandidateIdentifier IdNumber="1VES"/>
										<!-- load with candidate unique identifier -->
										<CandidateFullName>
											<NameElement ElementType="fullname">Elinore Marsh
									Stormer</NameElement>
										</CandidateFullName>
										<StatusDetails/>
										<!-- in most cases it will be "candidate" but there are possible values to support local needs -->
									</Candidate>
									<Candidate>
										<CandidateIdentifier IdNumber="1VKO"/>
										<CandidateFullName>
											<NameElement ElementType="fullname">Kandi S. C'Connor</NameElement>
										</CandidateFullName>
										<StatusDetails/>
									</Candidate>
								</BallotChoices>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="23">
								<ContestIdentifier IdNumber="23ST">
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">
											<p style="font-family:'Myriad Pro';font-size:10pt">12 <br/>Proposed
									Sales and Use Tax<br/> County of Summit <br/>
											</p>
										</body>
									</ContestName>
								</ContestIdentifier>
								<ContestScope>Local</ContestScope>
								<ElectionType>General</ElectionType>
								<HowToVote>
									<Message>A majority affirmative vote is necessary for passage.</Message>
								</HowToVote>
								<Rotation>yes</Rotation>
								<RotationMethod>Standard</RotationMethod>
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<MaxVotes>1</MaxVotes>
								<MinVotes>0</MinVotes>
								<MaxWriteIn>0</MaxWriteIn>
								<BallotChoices>
									<Candidate>
										<ProposalItem ReferendumOptionIdentifier="1DY">
											<SelectionText>YES</SelectionText>
										</ProposalItem>
									</Candidate>
									<Candidate>
										<ProposalItem ReferendumOptionIdentifier="1DN">
											<SelectionText>NO</SelectionText>
										</ProposalItem>
									</Candidate>
								</BallotChoices>
								<Messages>
									<Message Type="MeasureText">
										<body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">
											<p style="page-break-inside:avoid;"> The Council of the County of
									Summit proposes to levy an additional sales and use tax in the
									amount of 1/4% for the purpose of providing additional revenue
									to (i) operate and maintain the Summit County Jail, (ii)
									acquire, construct, equip or repair permanent improvements for
									the County&apos;s 800 MHz Emergency Radio System, County 9-1-1
									System and County-owned facilities, (iii) fund the County&apos;s
									general fund and (iv) to pay the expenses of administering such
									sales and use tax levy for a period of 10 years, which shall be
									effective and levied beginning April 1, 2015, or at the earliest
									period allowed by law. <br/>
												<br/> Shall the resolution of the Council of the County of
									Summit proposing a 1/4% sales and use tax be approved? </p>
										</body>
									</Message>
								</Messages>
								<KeepIntact Target="MeasureText">none</KeepIntact>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="24">
								<ContestIdentifier IdNumber="24CA1">
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">
											<p style="font-family:'Myriad Pro';font-size:10pt">13 <br/> Proposed
									Charter Amendment <br/> County of Summit <br/>
											</p>
										</body>
									</ContestName>
								</ContestIdentifier>
								<ContestScope>Local</ContestScope>
								<ElectionType>General</ElectionType>
								<HowToVote>
									<Message>A majority affirmative vote is necessary for passage.</Message>
								</HowToVote>
								<Rotation>yes</Rotation>
								<RotationMethod>Standard</RotationMethod>
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<MaxVotes>1</MaxVotes>
								<MinVotes>0</MinVotes>
								<MaxWriteIn>0</MaxWriteIn>
								<BallotChoices>
									<Candidate>
										<ProposalItem ReferendumOptionIdentifier="2DY">
											<SelectionText>YES</SelectionText>
										</ProposalItem>
									</Candidate>
									<Candidate>
										<ProposalItem ReferendumOptionIdentifier="2DN">
											<SelectionText>NO</SelectionText>
										</ProposalItem>
									</Candidate>
								</BallotChoices>
								<Messages>
									<Message Type="MeasureText">
										<body xmlns="http://www.w3.org/1999/xhtml">An Amendment to the Charter
								of the County of Summit to adopt Article VIII to consolidate
								information technology and data processing operations in Summit
								County government by creating a County Information Technology Board
								and a Department of Information Technology. <br/>
											<br/>
											<p style="font-weight:bold;page-break-before:avoid;">Shall the
									proposed charter amendment be adopted?</p>
										</body>
									</Message>
								</Messages>
								<KeepIntact Target="MeasureText">none</KeepIntact>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
							<Contest DisplayOrder="25">
								<ContestIdentifier IdNumber="25CA2">
									<ContestName>
										<body xmlns="http://www.w3.org/1999/xhtml">
											<p style="font-family:'Myriad Pro';font-size:10pt">14 <br/> Proposed
									Charter Amendment <br/> County of Summit <br/>
											</p>
										</body>
									</ContestName>
								</ContestIdentifier>
								<ContestScope>Local</ContestScope>
								<ElectionType>General</ElectionType>
								<HowToVote>
									<Message>A majority affirmative vote is necessary for passage.</Message>
								</HowToVote>
								<Rotation>yes</Rotation>
								<RotationMethod>Standard</RotationMethod>
								<VotingMethod>FPP</VotingMethod>
								<ChoiceType>x</ChoiceType>
								<MaxVotes>1</MaxVotes>
								<MinVotes>0</MinVotes>
								<MaxWriteIn>0</MaxWriteIn>
								<BallotChoices>
									<Candidate>
										<ProposalItem ReferendumOptionIdentifier="3DY">
											<SelectionText>YES</SelectionText>
										</ProposalItem>
									</Candidate>
									<Candidate>
										<ProposalItem ReferendumOptionIdentifier="3DN">
											<SelectionText>NO</SelectionText>
										</ProposalItem>
									</Candidate>
								</BallotChoices>
								<Messages>
									<Message Type="MeasureText">
										<body xmlns="http://www.w3.org/1999/xhtml">An Amendment to Article III,
								Section 3.04 of the Charter of the County of Summit to provide that
								on the first Monday of each year which is not a legal holiday, the
								County Council shall organize by electing one of its members as
								President and one other member as Vice-President for terms of one year.<br/>
											<br/>
											<p style="font-weight:bold;page-break-before:avoid;">Shall the
									proposed charter amendment be adopted?</p>
										</body>
									</Message>
								</Messages>
								<KeepIntact Target="MeasureText">none</KeepIntact>
								<KeepIntact Target="BallotChoices">contentArea</KeepIntact>
							</Contest>
						</Election>
						<BallotIdentifier IdNumber="01-0052-01">
							<BallotName>0520 Akron 4-L 01</BallotName>
						</BallotIdentifier>
						<!-- Stub Number -->
					</Ballot>
				</Ballots>
			</EML>
			<!-- modify EML XML instance above -->
		</xfa:data>
	</xfa:datasets>
	<pdf xmlns="http://ns.adobe.com/xdp/pdf/">
		<document>
			<?KeepOnDisk?>
			<chunk></chunk>
		</document>
	</pdf>
</xdp:xdp>
