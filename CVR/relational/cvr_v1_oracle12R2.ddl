-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-12-08 08:49:22 EST
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE TABLE annotation (
    time_stamp       TIMESTAMP,
    annotation_id    NUMBER
        CONSTRAINT nnc_annotation_annotation_id NOT NULL,
    cvr_snapshot_id  NUMBER
        CONSTRAINT nnc_annotation_cvr_snapshot_id NOT NULL
);

ALTER TABLE annotation ADD CONSTRAINT annotation_pk PRIMARY KEY ( annotation_id );

CREATE TABLE annotation_adjudicator_name (
    adjudicator_name                VARCHAR2(4000),
    annotation_adjudicator_name_id  NUMBER
        CONSTRAINT nnc_annotation_adjudicator_name_annotation_adjudicator_name_id NOT NULL,
    annotation_annotation_id        NUMBER
        CONSTRAINT nnc_annotation_adjudicator_name_annotation_annotation_id NOT NULL
);

ALTER TABLE annotation_adjudicator_name ADD CONSTRAINT annotation_adjudicator_name_pk PRIMARY KEY ( annotation_adjudicator_name_id );

CREATE TABLE annotation_message (
    message                   VARCHAR2(4000),
    annotation_message_id     NUMBER
        CONSTRAINT nnc_annotation_message_annotation_message_id NOT NULL,
    annotation_annotation_id  NUMBER
        CONSTRAINT nnc_annotation_message_annotation_annotation_id NOT NULL
);

ALTER TABLE annotation_message ADD CONSTRAINT annotation_message_pk PRIMARY KEY ( annotation_message_id );

CREATE TABLE ballot_measure_contest (
    contest_id                 NUMBER
        CONSTRAINT nnc_ballot_measure_contest_ballot_measure_contest_id1 NOT NULL,
    ballot_measure_contest_id  NUMBER
        CONSTRAINT nnc_ballot_measure_contest_ballot_measure_contest_id NOT NULL
);

ALTER TABLE ballot_measure_contest ADD CONSTRAINT ballot_measure_contest_pk PRIMARY KEY ( contest_id );

ALTER TABLE ballot_measure_contest ADD CONSTRAINT ballot_measure_contest_ballot_measure_contest_id_un UNIQUE ( ballot_measure_contest_id );

CREATE TABLE ballot_measure_selection (
    contest_selection_id         NUMBER
        CONSTRAINT nnc_ballot_measure_selection_ballot_measure_selection_id1 NOT NULL,
    selection                    VARCHAR2(4000)
        CONSTRAINT nnc_ballot_measure_selection_selection NOT NULL,
    ballot_measure_selection_id  NUMBER
        CONSTRAINT nnc_ballot_measure_selection_ballot_measure_selection_id NOT NULL
);

ALTER TABLE ballot_measure_selection ADD CONSTRAINT ballot_measure_selection_pk PRIMARY KEY ( contest_selection_id );

ALTER TABLE ballot_measure_selection ADD CONSTRAINT ballot_measure_selection_ballot_measure_selection_id_un UNIQUE ( ballot_measure_selection_id );

CREATE TABLE candidate (
    name          VARCHAR2(4000),
    candidate_id  NUMBER
        CONSTRAINT nnc_candidate_candidate_id NOT NULL,
    party_id      NUMBER,
    election_id   NUMBER
        CONSTRAINT nnc_candidate_election_id NOT NULL
);

ALTER TABLE candidate ADD CONSTRAINT candidate_pk PRIMARY KEY ( candidate_id );

CREATE TABLE candidate_code (
    code_id       NUMBER
        CONSTRAINT nnc_candidate_code_code_id NOT NULL,
    candidate_id  NUMBER
        CONSTRAINT nnc_candidate_code_candidate_id NOT NULL
);

ALTER TABLE candidate_code ADD CONSTRAINT candidate_code_pk PRIMARY KEY ( code_id,
                                                                           candidate_id );

CREATE TABLE candidate_contest (
    contest_id             NUMBER
        CONSTRAINT nnc_candidate_contest_candidate_contest_id1 NOT NULL,
    number_elected         INTEGER,
    votes_allowed          INTEGER,
    candidate_contest_id   NUMBER
        CONSTRAINT nnc_candidate_contest_candidate_contest_id NOT NULL,
    primaryparty_party_id  NUMBER
);

ALTER TABLE candidate_contest ADD CONSTRAINT candidate_contest_pk PRIMARY KEY ( contest_id );

ALTER TABLE candidate_contest ADD CONSTRAINT candidate_contest_candidate_contest_id_un UNIQUE ( candidate_contest_id );

CREATE TABLE candidate_selection (
    contest_selection_id    NUMBER
        CONSTRAINT nnc_candidate_selection_candidate_selection_id1 NOT NULL,
    is_write_in             NUMBER,
    candidate_selection_id  NUMBER
        CONSTRAINT nnc_candidate_selection_candidate_selection_id NOT NULL
);

ALTER TABLE candidate_selection ADD CONSTRAINT candidate_selection_pk PRIMARY KEY ( contest_selection_id );

ALTER TABLE candidate_selection ADD CONSTRAINT candidate_selection_candidate_selection_id_un UNIQUE ( candidate_selection_id );

CREATE TABLE candidate_selection_candidate (
    candidate_id          NUMBER
        CONSTRAINT nnc_candidate_selection_candidate_candidate_id NOT NULL,
    contest_selection_id  NUMBER
        CONSTRAINT nnc_candidate_selection_candidate_contest_selection_id NOT NULL
);

ALTER TABLE candidate_selection_candidate ADD CONSTRAINT candidate_selection_candidate_pk PRIMARY KEY ( candidate_id,
                                                                                                         contest_selection_id );

CREATE TABLE cast_vote_record_report (
    generated_date              TIMESTAMP
        CONSTRAINT nnc_cast_vote_record_report_generated_date NOT NULL,
    notes                       VARCHAR2(4000),
    other_report_type           VARCHAR2(4000),
    version                     VARCHAR2(50)
        CONSTRAINT nnc_cast_vote_record_report_version NOT NULL,
    cast_vote_record_report_id  NUMBER
        CONSTRAINT nnc_cast_vote_record_report_cast_vote_record_report_id NOT NULL
);

ALTER TABLE cast_vote_record_report
    ADD CONSTRAINT ck_cast_vote_record_report_version CHECK ( version IN (
        '1.0.0'
    ) );

ALTER TABLE cast_vote_record_report ADD CONSTRAINT cast_vote_record_report_pk PRIMARY KEY ( cast_vote_record_report_id );

CREATE TABLE cast_vote_record_report_report_generating_device (
    reporting_device_id         NUMBER
        CONSTRAINT nnc_cast_vote_record_report_report_generating_device_reporting_device_id NOT NULL,
    cast_vote_record_report_id  NUMBER
        CONSTRAINT nnc_cast_vote_record_report_report_generating_device_cast_vote_record_report_id NOT NULL
);

ALTER TABLE cast_vote_record_report_report_generating_device ADD CONSTRAINT cast_vote_record_report_report_generating_device_pk PRIMARY
KEY ( reporting_device_id,
                                                                                                                                 cast_vote_record_report_id );

CREATE TABLE cast_vote_record_report_report_type (
    report_type                             VARCHAR2(50),
    cast_vote_record_report_report_type_id  NUMBER
        CONSTRAINT nnc_cast_vote_record_report_report_type_cast_vote_record_report_report_type_id NOT NULL,
    cast_vote_record_report_id              NUMBER
        CONSTRAINT nnc_cast_vote_record_report_report_type_cast_vote_record_report_id NOT NULL
);

ALTER TABLE cast_vote_record_report_report_type
    ADD CONSTRAINT ck_cast_vote_record_report_report_type_report_type CHECK ( report_type IN (
        'adjudicated',
        'aggregated',
        'originating-device-export',
        'other',
        'rcv-round'
    ) );

ALTER TABLE cast_vote_record_report_report_type ADD CONSTRAINT cast_vote_record_report_report_type_pk PRIMARY KEY ( cast_vote_record_report_report_type_id );

CREATE TABLE code (
    label       VARCHAR2(4000),
    other_type  VARCHAR2(4000),
    type        VARCHAR2(50)
        CONSTRAINT nnc_code_type NOT NULL,
    value       VARCHAR2(4000)
        CONSTRAINT nnc_code_value NOT NULL,
    code_id     NUMBER
        CONSTRAINT nnc_code_code_id NOT NULL
);

ALTER TABLE code
    ADD CONSTRAINT ck_code_type CHECK ( type IN (
        'fips',
        'local-level',
        'national-level',
        'ocd-id',
        'other',
        'state-level'
    ) );

ALTER TABLE code ADD CONSTRAINT code_pk PRIMARY KEY ( code_id );

CREATE TABLE contest (
    contest_id            NUMBER
        CONSTRAINT nnc_contest_contest_id NOT NULL,
    abbreviation          VARCHAR2(4000),
    name                  VARCHAR2(4000),
    other_vote_variation  VARCHAR2(4000),
    vote_variation        VARCHAR2(50),
    election_id           NUMBER
        CONSTRAINT nnc_contest_election_id NOT NULL
);

ALTER TABLE contest
    ADD CONSTRAINT ck_contest_vote_variation CHECK ( vote_variation IN (
        'approval',
        'borda',
        'cumulative',
        'majority',
        'n-of-m',
        'other',
        'plurality',
        'proportional',
        'range',
        'rcv',
        'super-majority'
    ) );

--  ERROR: No Discriminator Column found in Arc FKArc_3 - check constraint cannot be generated

ALTER TABLE contest ADD CONSTRAINT contest_pk PRIMARY KEY ( contest_id );

CREATE TABLE contest_code (
    code_id     NUMBER
        CONSTRAINT nnc_contest_code_code_id NOT NULL,
    contest_id  NUMBER
        CONSTRAINT nnc_contest_code_contest_id NOT NULL
);

ALTER TABLE contest_code ADD CONSTRAINT contest_code_pk PRIMARY KEY ( code_id,
                                                                       contest_id );

CREATE TABLE contest_selection (
    contest_selection_id  NUMBER
        CONSTRAINT nnc_contest_selection_contest_selection_id NOT NULL,
    contest_id            NUMBER
        CONSTRAINT nnc_contest_selection_contest_id NOT NULL
);

ALTER TABLE contest_selection ADD CONSTRAINT contest_selection_pk PRIMARY KEY ( contest_selection_id );

CREATE TABLE contest_selection_code (
    code_id               NUMBER
        CONSTRAINT nnc_contest_selection_code_code_id NOT NULL,
    contest_selection_id  NUMBER
        CONSTRAINT nnc_contest_selection_code_contest_selection_id NOT NULL
);

ALTER TABLE contest_selection_code ADD CONSTRAINT contest_selection_code_pk PRIMARY KEY ( code_id,
                                                                                           contest_selection_id );

CREATE TABLE cvr (
    ballot_audit_id                     VARCHAR2(4000),
    ballot_pre_printed_id               VARCHAR2(4000),
    ballot_sheet_id                     VARCHAR2(4000),
    ballot_style_id                     VARCHAR2(4000),
    batch_id                            VARCHAR2(4000),
    batch_sequence_id                   INTEGER,
    unique_id                           VARCHAR2(4000),
    cvr_id                              NUMBER
        CONSTRAINT nnc_cvr_cvr_id NOT NULL,
    cast_vote_record_report_id          NUMBER
        CONSTRAINT nnc_cvr_cast_vote_record_report_id NOT NULL,
    ballotstyleunit_gp_unit_id          NUMBER,
    creatingdevice_reporting_device_id  NUMBER,
    election_id                         NUMBER
        CONSTRAINT nnc_cvr_election_id NOT NULL
);

ALTER TABLE cvr ADD CONSTRAINT cvr_pk PRIMARY KEY ( cvr_id );

CREATE TABLE cvr_ballot_image (
    image_data_id  NUMBER
        CONSTRAINT nnc_cvr_ballot_image_image_data_id NOT NULL,
    cvr_id         NUMBER
        CONSTRAINT nnc_cvr_ballot_image_cvr_id NOT NULL
);

ALTER TABLE cvr_ballot_image ADD CONSTRAINT cvr_ballot_image_pk PRIMARY KEY ( image_data_id,
                                                                              cvr_id );

CREATE TABLE cvr_contest (
    other_status     VARCHAR2(4000),
    overvotes        INTEGER,
    selections       INTEGER,
    undervotes       INTEGER,
    write_ins        INTEGER,
    cvr_contest_id   NUMBER
        CONSTRAINT nnc_cvr_contest_cvr_contest_id NOT NULL,
    contest_id       NUMBER
        CONSTRAINT nnc_cvr_contest_contest_id NOT NULL,
    cvr_snapshot_id  NUMBER
        CONSTRAINT nnc_cvr_contest_cvr_snapshot_id NOT NULL
);

ALTER TABLE cvr_contest ADD CONSTRAINT cvr_contest_pk PRIMARY KEY ( cvr_contest_id );

CREATE TABLE cvr_contest_selection (
    option_position           INTEGER,
    other_status              VARCHAR2(4000),
    rank                      INTEGER,
    total_fractional_votes    VARCHAR2(4000),
    total_number_votes        INTEGER,
    cvr_contest_selection_id  NUMBER
        CONSTRAINT nnc_cvr_contest_selection_cvr_contest_selection_id NOT NULL,
    cvr_contest_id            NUMBER
        CONSTRAINT nnc_cvr_contest_selection_cvr_contest_id NOT NULL,
    contest_selection_id      NUMBER
);

ALTER TABLE cvr_contest_selection ADD CONSTRAINT cvr_contest_selection_pk PRIMARY KEY ( cvr_contest_selection_id );

CREATE TABLE cvr_contest_selection_status (
    status                                        VARCHAR2(50),
    cvr_contest_selection_status_id               NUMBER
        CONSTRAINT nnc_cvr_contest_selection_status_cvr_contest_selection_status_id NOT NULL,
    cvrcontestselection_cvr_contest_selection_id  NUMBER
        CONSTRAINT nnc_cvr_contest_selection_status_cvrcontestselection_cvr_contest_selection_id NOT NULL
);

ALTER TABLE cvr_contest_selection_status
    ADD CONSTRAINT ck_cvr_contest_selection_status_status CHECK ( status IN (
        'generated-rules',
        'invalidated-rules',
        'needs-adjudication',
        'other'
    ) );

ALTER TABLE cvr_contest_selection_status ADD CONSTRAINT cvr_contest_selection_status_pk PRIMARY KEY ( cvr_contest_selection_status_id );

CREATE TABLE cvr_contest_status (
    status                     VARCHAR2(50),
    cvr_contest_status_id      NUMBER
        CONSTRAINT nnc_cvr_contest_status_cvr_contest_status_id NOT NULL,
    cvrcontest_cvr_contest_id  NUMBER
        CONSTRAINT nnc_cvr_contest_status_cvrcontest_cvr_contest_id NOT NULL
);

ALTER TABLE cvr_contest_status
    ADD CONSTRAINT ck_cvr_contest_status_status CHECK ( status IN (
        'invalidated-rules',
        'not-indicated',
        'other',
        'overvoted',
        'undervoted'
    ) );

ALTER TABLE cvr_contest_status ADD CONSTRAINT cvr_contest_status_pk PRIMARY KEY ( cvr_contest_status_id );

CREATE TABLE cvr_party (
    party_id  NUMBER
        CONSTRAINT nnc_cvr_party_party_id NOT NULL,
    cvr_id    NUMBER
        CONSTRAINT nnc_cvr_party_cvr_id NOT NULL
);

ALTER TABLE cvr_party ADD CONSTRAINT cvr_party_pk PRIMARY KEY ( party_id,
                                                                cvr_id );

CREATE TABLE cvr_snapshot (
    other_status     VARCHAR2(4000),
    type             VARCHAR2(50)
        CONSTRAINT nnc_cvr_snapshot_type NOT NULL,
    cvr_snapshot_id  NUMBER
        CONSTRAINT nnc_cvr_snapshot_cvr_snapshot_id NOT NULL,
    cvr_cvr_id       NUMBER
        CONSTRAINT nnc_cvr_snapshot_cvr_cvr_id NOT NULL
);

ALTER TABLE cvr_snapshot
    ADD CONSTRAINT ck_cvr_snapshot_type CHECK ( type IN (
        'interpreted',
        'modified',
        'original'
    ) );

ALTER TABLE cvr_snapshot ADD CONSTRAINT cvr_snapshot_pk PRIMARY KEY ( cvr_snapshot_id );

CREATE TABLE cvr_snapshot_status (
    status                       VARCHAR2(50),
    cvr_snapshot_status_id       NUMBER
        CONSTRAINT nnc_cvr_snapshot_status_cvr_snapshot_status_id NOT NULL,
    cvrsnapshot_cvr_snapshot_id  NUMBER
        CONSTRAINT nnc_cvr_snapshot_status_cvrsnapshot_cvr_snapshot_id NOT NULL
);

ALTER TABLE cvr_snapshot_status
    ADD CONSTRAINT ck_cvr_snapshot_status_status CHECK ( status IN (
        'needs-adjudication',
        'other'
    ) );

ALTER TABLE cvr_snapshot_status ADD CONSTRAINT cvr_snapshot_status_pk PRIMARY KEY ( cvr_snapshot_status_id );

CREATE TABLE cvr_write_in (
    text             VARCHAR2(4000),
    cvr_write_in_id  NUMBER
        CONSTRAINT nnc_cvr_write_in_cvr_write_in_id NOT NULL
);

ALTER TABLE cvr_write_in ADD CONSTRAINT cvr_write_in_pk PRIMARY KEY ( cvr_write_in_id );

CREATE TABLE cvr_write_in_write_in_image (
    image_data_id    NUMBER
        CONSTRAINT nnc_cvr_write_in_write_in_image_image_data_id NOT NULL,
    cvr_write_in_id  NUMBER
        CONSTRAINT nnc_cvr_write_in_write_in_image_cvr_write_in_id NOT NULL
);

ALTER TABLE cvr_write_in_write_in_image ADD CONSTRAINT cvr_write_in_write_in_image_pk PRIMARY KEY ( image_data_id,
                                                                                                     cvr_write_in_id );

CREATE TABLE election (
    name                        VARCHAR2(4000),
    election_id                 NUMBER
        CONSTRAINT nnc_election_election_id NOT NULL,
    cast_vote_record_report_id  NUMBER
        CONSTRAINT nnc_election_cast_vote_record_report_id NOT NULL,
    electionscope_gp_unit_id    NUMBER
        CONSTRAINT nnc_election_electionscope_gp_unit_id NOT NULL
);

ALTER TABLE election ADD CONSTRAINT election_pk PRIMARY KEY ( election_id );

CREATE TABLE election_code (
    code_id      NUMBER
        CONSTRAINT nnc_election_code_code_id NOT NULL,
    election_id  NUMBER
        CONSTRAINT nnc_election_code_election_id NOT NULL
);

ALTER TABLE election_code ADD CONSTRAINT election_code_pk PRIMARY KEY ( code_id,
                                                                         election_id );

CREATE TABLE "File" (
    file_id    NUMBER
        CONSTRAINT nnc_file_file_id NOT NULL,
    data       BLOB
        CONSTRAINT nnc_file_data NOT NULL,
    file_name  VARCHAR2(4000),
    mime_type  VARCHAR2(4000)
);

ALTER TABLE "File" ADD CONSTRAINT file_pk PRIMARY KEY ( file_id );

CREATE TABLE gp_unit (
    name                        VARCHAR2(4000),
    other_type                  VARCHAR2(4000),
    type                        VARCHAR2(50)
        CONSTRAINT nnc_gp_unit_type NOT NULL,
    gp_unit_id                  NUMBER
        CONSTRAINT nnc_gp_unit_gp_unit_id NOT NULL,
    cast_vote_record_report_id  NUMBER
        CONSTRAINT nnc_gp_unit_cast_vote_record_report_id NOT NULL
);

ALTER TABLE gp_unit
    ADD CONSTRAINT ck_gp_unit_type CHECK ( type IN (
        'combined-precinct',
        'other',
        'polling-place',
        'precinct',
        'split-precinct',
        'vote-center'
    ) );

ALTER TABLE gp_unit ADD CONSTRAINT gp_unit_pk PRIMARY KEY ( gp_unit_id );

CREATE TABLE gp_unit_code (
    code_id     NUMBER
        CONSTRAINT nnc_gp_unit_code_code_id NOT NULL,
    gp_unit_id  NUMBER
        CONSTRAINT nnc_gp_unit_code_gp_unit_id NOT NULL
);

ALTER TABLE gp_unit_code ADD CONSTRAINT gp_unit_code_pk PRIMARY KEY ( code_id,
                                                                       gp_unit_id );

CREATE TABLE gp_unit_reporting_device (
    reporting_device_id  NUMBER
        CONSTRAINT nnc_gp_unit_reporting_device_reporting_device_id NOT NULL,
    gp_unit_id           NUMBER
        CONSTRAINT nnc_gp_unit_reporting_device_gp_unit_id NOT NULL
);

ALTER TABLE gp_unit_reporting_device ADD CONSTRAINT gp_unit_reporting_device_pk PRIMARY KEY ( reporting_device_id,
                                                                                               gp_unit_id );

CREATE TABLE hash (
    other_type  VARCHAR2(4000),
    type        VARCHAR2(50)
        CONSTRAINT nnc_hash_type NOT NULL,
    value       VARCHAR2(4000)
        CONSTRAINT nnc_hash_value NOT NULL,
    hash_id     NUMBER
        CONSTRAINT nnc_hash_hash_id NOT NULL
);

ALTER TABLE hash
    ADD CONSTRAINT ck_hash_type CHECK ( type IN (
        'md6',
        'other',
        'sha-256',
        'sha-512'
    ) );

ALTER TABLE hash ADD CONSTRAINT hash_pk PRIMARY KEY ( hash_id );

CREATE TABLE image (
    image_id  NUMBER
        CONSTRAINT nnc_image_image_id NOT NULL,
    file_id   NUMBER
        CONSTRAINT nnc_image_file_id NOT NULL
);

ALTER TABLE image ADD CONSTRAINT image_pk PRIMARY KEY ( file_id,
                                                        image_id );

ALTER TABLE image ADD CONSTRAINT image_image_id_un UNIQUE ( image_id );

CREATE TABLE image_data (
    location       VARCHAR2(4000),
    image_data_id  NUMBER
        CONSTRAINT nnc_image_data_image_data_id NOT NULL,
    hash_id        NUMBER,
    file_id        NUMBER,
    image_id       NUMBER
);

CREATE UNIQUE INDEX image_data_hash_id_idx ON
    image_data (
        hash_id
    ASC );

CREATE UNIQUE INDEX image_data_file_id_image_id_idx ON
    image_data (
        file_id
    ASC,
        image_id
    ASC );

ALTER TABLE image_data ADD CONSTRAINT image_data_pk PRIMARY KEY ( image_data_id );

CREATE TABLE party (
    abbreviation                VARCHAR2(4000),
    name                        VARCHAR2(4000),
    party_id                    NUMBER
        CONSTRAINT nnc_party_party_id NOT NULL,
    cast_vote_record_report_id  NUMBER
        CONSTRAINT nnc_party_cast_vote_record_report_id NOT NULL
);

ALTER TABLE party ADD CONSTRAINT party_pk PRIMARY KEY ( party_id );

CREATE TABLE party_code (
    code_id   NUMBER
        CONSTRAINT nnc_party_code_code_id NOT NULL,
    party_id  NUMBER
        CONSTRAINT nnc_party_code_party_id NOT NULL
);

ALTER TABLE party_code ADD CONSTRAINT party_code_pk PRIMARY KEY ( code_id,
                                                                   party_id );

CREATE TABLE party_contest (
    contest_id        NUMBER
        CONSTRAINT nnc_party_contest_party_contest_id1 NOT NULL,
    party_contest_id  NUMBER
        CONSTRAINT nnc_party_contest_party_contest_id NOT NULL
);

ALTER TABLE party_contest ADD CONSTRAINT party_contest_pk PRIMARY KEY ( contest_id );

ALTER TABLE party_contest ADD CONSTRAINT party_contest_party_contest_id_un UNIQUE ( party_contest_id );

CREATE TABLE party_selection (
    contest_selection_id  NUMBER
        CONSTRAINT nnc_party_selection_party_selection_id1 NOT NULL,
    party_selection_id    NUMBER
        CONSTRAINT nnc_party_selection_party_selection_id NOT NULL
);

ALTER TABLE party_selection ADD CONSTRAINT party_selection_pk PRIMARY KEY ( contest_selection_id );

ALTER TABLE party_selection ADD CONSTRAINT party_selection_party_selection_id_un UNIQUE ( party_selection_id );

CREATE TABLE party_selection_party (
    party_id              NUMBER
        CONSTRAINT nnc_party_selection_party_party_id NOT NULL,
    contest_selection_id  NUMBER
        CONSTRAINT nnc_party_selection_party_contest_selection_id NOT NULL
);

ALTER TABLE party_selection_party ADD CONSTRAINT party_selection_party_pk PRIMARY KEY ( party_id,
                                                                                         contest_selection_id );

CREATE TABLE reporting_device (
    application                 VARCHAR2(4000),
    manufacturer                VARCHAR2(4000),
    mark_metric_type            VARCHAR2(4000),
    model                       VARCHAR2(4000),
    serial_number               VARCHAR2(4000),
    reporting_device_id         NUMBER
        CONSTRAINT nnc_reporting_device_reporting_device_id NOT NULL,
    cast_vote_record_report_id  NUMBER
        CONSTRAINT nnc_reporting_device_cast_vote_record_report_id NOT NULL
);

ALTER TABLE reporting_device ADD CONSTRAINT reporting_device_pk PRIMARY KEY ( reporting_device_id );

CREATE TABLE reporting_device_code (
    code_id              NUMBER
        CONSTRAINT nnc_reporting_device_code_code_id NOT NULL,
    reporting_device_id  NUMBER
        CONSTRAINT nnc_reporting_device_code_reporting_device_id NOT NULL
);

ALTER TABLE reporting_device_code ADD CONSTRAINT reporting_device_code_pk PRIMARY KEY ( code_id,
                                                                                         reporting_device_id );

CREATE TABLE reporting_device_notes (
    notes                                VARCHAR2(4000),
    reporting_device_notes_id            NUMBER
        CONSTRAINT nnc_reporting_device_notes_reporting_device_notes_id NOT NULL,
    reportingdevice_reporting_device_id  NUMBER
        CONSTRAINT nnc_reporting_device_notes_reportingdevice_reporting_device_id NOT NULL
);

ALTER TABLE reporting_device_notes ADD CONSTRAINT reporting_device_notes_pk PRIMARY KEY ( reporting_device_notes_id );

CREATE TABLE retention_contest (
    contest_id            NUMBER
        CONSTRAINT nnc_retention_contest_retention_contest_id1 NOT NULL,
    retention_contest_id  NUMBER
        CONSTRAINT nnc_retention_contest_retention_contest_id NOT NULL,
    candidate_id          NUMBER
);

ALTER TABLE retention_contest ADD CONSTRAINT retention_contest_pk PRIMARY KEY ( contest_id );

ALTER TABLE retention_contest ADD CONSTRAINT retention_contest_retention_contest_id_un UNIQUE ( retention_contest_id );

CREATE TABLE selection_position (
    fractional_votes          VARCHAR2(4000),
    has_indication            VARCHAR2(50)
        CONSTRAINT nnc_selection_position_has_indication NOT NULL,
    is_allocable              VARCHAR2(50),
    is_generated              NUMBER,
    number_votes              INTEGER
        CONSTRAINT nnc_selection_position_number_votes NOT NULL,
    other_status              VARCHAR2(4000),
    position                  INTEGER,
    rank                      INTEGER,
    selection_position_id     NUMBER
        CONSTRAINT nnc_selection_position_selection_position_id NOT NULL,
    cvr_contest_selection_id  NUMBER
        CONSTRAINT nnc_selection_position_cvr_contest_selection_id NOT NULL,
    cvr_write_in_id           NUMBER
);

ALTER TABLE selection_position
    ADD CONSTRAINT ck_selection_position_has_indication CHECK ( has_indication IN (
        'no',
        'unknown',
        'yes'
    ) );

ALTER TABLE selection_position
    ADD CONSTRAINT ck_selection_position_is_allocable CHECK ( is_allocable IN (
        'no',
        'unknown',
        'yes'
    ) );

CREATE UNIQUE INDEX selection_position_cvr_write_in_id_idx ON
    selection_position (
        cvr_write_in_id
    ASC );

ALTER TABLE selection_position ADD CONSTRAINT selection_position_pk PRIMARY KEY ( selection_position_id );

CREATE TABLE selection_position_code (
    code_id                NUMBER
        CONSTRAINT nnc_selection_position_code_code_id NOT NULL,
    selection_position_id  NUMBER
        CONSTRAINT nnc_selection_position_code_selection_position_id NOT NULL
);

ALTER TABLE selection_position_code ADD CONSTRAINT selection_position_code_pk PRIMARY KEY ( code_id,
                                                                                             selection_position_id );

CREATE TABLE selection_position_mark_metric_value (
    mark_metric_value                        VARCHAR2(4000),
    selection_position_mark_metric_value_id  NUMBER
        CONSTRAINT nnc_selection_position_mark_metric_value_selection_position_mark_metric_value_id NOT NULL,
    selectionposition_selection_position_id  NUMBER
        CONSTRAINT nnc_selection_position_mark_metric_value_selectionposition_selection_position_id NOT NULL
);

ALTER TABLE selection_position_mark_metric_value ADD CONSTRAINT selection_position_mark_metric_value_pk PRIMARY KEY ( selection_position_mark_metric_value_id );

CREATE TABLE selection_position_status (
    status                                   VARCHAR2(50),
    selection_position_status_id             NUMBER
        CONSTRAINT nnc_selection_position_status_selection_position_status_id NOT NULL,
    selectionposition_selection_position_id  NUMBER
        CONSTRAINT nnc_selection_position_status_selectionposition_selection_position_id NOT NULL
);

ALTER TABLE selection_position_status
    ADD CONSTRAINT ck_selection_position_status_status CHECK ( status IN (
        'adjudicated',
        'generated-rules',
        'invalidated-rules',
        'other'
    ) );

ALTER TABLE selection_position_status ADD CONSTRAINT selection_position_status_pk PRIMARY KEY ( selection_position_status_id );

ALTER TABLE annotation_adjudicator_name
    ADD CONSTRAINT annotation_adjudicator_name_annotation_fk FOREIGN KEY ( annotation_annotation_id )
        REFERENCES annotation ( annotation_id );

ALTER TABLE annotation
    ADD CONSTRAINT annotation_cvr_snapshot_fk FOREIGN KEY ( cvr_snapshot_id )
        REFERENCES cvr_snapshot ( cvr_snapshot_id );

ALTER TABLE annotation_message
    ADD CONSTRAINT annotation_message_annotation_fk FOREIGN KEY ( annotation_annotation_id )
        REFERENCES annotation ( annotation_id );

ALTER TABLE ballot_measure_contest
    ADD CONSTRAINT ballot_measure_contest_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE ballot_measure_selection
    ADD CONSTRAINT ballot_measure_selection_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE candidate_code
    ADD CONSTRAINT candidate_code_candidate_fk FOREIGN KEY ( candidate_id )
        REFERENCES candidate ( candidate_id );

ALTER TABLE candidate_code
    ADD CONSTRAINT candidate_code_code_fk FOREIGN KEY ( code_id )
        REFERENCES code ( code_id );

ALTER TABLE candidate_contest
    ADD CONSTRAINT candidate_contest_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE candidate_contest
    ADD CONSTRAINT candidate_contest_party_fk FOREIGN KEY ( primaryparty_party_id )
        REFERENCES party ( party_id );

ALTER TABLE candidate
    ADD CONSTRAINT candidate_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE candidate
    ADD CONSTRAINT candidate_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE candidate_selection_candidate
    ADD CONSTRAINT candidate_selection_candidate_candidate_fk FOREIGN KEY ( candidate_id )
        REFERENCES candidate ( candidate_id );

ALTER TABLE candidate_selection_candidate
    ADD CONSTRAINT candidate_selection_candidate_candidate_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES candidate_selection ( contest_selection_id );

ALTER TABLE candidate_selection
    ADD CONSTRAINT candidate_selection_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE cast_vote_record_report_report_generating_device
    ADD CONSTRAINT cast_vote_record_report_report_generating_device_cast_vote_record_report_fk FOREIGN KEY ( cast_vote_record_report_id )
        REFERENCES cast_vote_record_report ( cast_vote_record_report_id );

ALTER TABLE cast_vote_record_report_report_generating_device
    ADD CONSTRAINT cast_vote_record_report_report_generating_device_reporting_device_fk FOREIGN KEY ( reporting_device_id )
        REFERENCES reporting_device ( reporting_device_id );

ALTER TABLE cast_vote_record_report_report_type
    ADD CONSTRAINT cast_vote_record_report_report_type_cast_vote_record_report_fk FOREIGN KEY ( cast_vote_record_report_id )
        REFERENCES cast_vote_record_report ( cast_vote_record_report_id );

ALTER TABLE contest_code
    ADD CONSTRAINT contest_code_code_fk FOREIGN KEY ( code_id )
        REFERENCES code ( code_id );

ALTER TABLE contest_code
    ADD CONSTRAINT contest_code_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE contest
    ADD CONSTRAINT contest_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE contest_selection_code
    ADD CONSTRAINT contest_selection_code_code_fk FOREIGN KEY ( code_id )
        REFERENCES code ( code_id );

ALTER TABLE contest_selection_code
    ADD CONSTRAINT contest_selection_code_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE contest_selection
    ADD CONSTRAINT contest_selection_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE cvr_ballot_image
    ADD CONSTRAINT cvr_ballot_image_cvr_fk FOREIGN KEY ( cvr_id )
        REFERENCES cvr ( cvr_id );

ALTER TABLE cvr_ballot_image
    ADD CONSTRAINT cvr_ballot_image_image_data_fk FOREIGN KEY ( image_data_id )
        REFERENCES image_data ( image_data_id );

ALTER TABLE cvr
    ADD CONSTRAINT cvr_cast_vote_record_report_fk FOREIGN KEY ( cast_vote_record_report_id )
        REFERENCES cast_vote_record_report ( cast_vote_record_report_id );

ALTER TABLE cvr_contest
    ADD CONSTRAINT cvr_contest_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE cvr_contest
    ADD CONSTRAINT cvr_contest_cvr_snapshot_fk FOREIGN KEY ( cvr_snapshot_id )
        REFERENCES cvr_snapshot ( cvr_snapshot_id );

ALTER TABLE cvr_contest_selection
    ADD CONSTRAINT cvr_contest_selection_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE cvr_contest_selection
    ADD CONSTRAINT cvr_contest_selection_cvr_contest_fk FOREIGN KEY ( cvr_contest_id )
        REFERENCES cvr_contest ( cvr_contest_id );

ALTER TABLE cvr_contest_selection_status
    ADD CONSTRAINT cvr_contest_selection_status_cvr_contest_selection_fk FOREIGN KEY ( cvrcontestselection_cvr_contest_selection_id )
        REFERENCES cvr_contest_selection ( cvr_contest_selection_id );

ALTER TABLE cvr_contest_status
    ADD CONSTRAINT cvr_contest_status_cvr_contest_fk FOREIGN KEY ( cvrcontest_cvr_contest_id )
        REFERENCES cvr_contest ( cvr_contest_id );

ALTER TABLE cvr
    ADD CONSTRAINT cvr_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE cvr
    ADD CONSTRAINT cvr_gp_unit_fk FOREIGN KEY ( ballotstyleunit_gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE cvr_party
    ADD CONSTRAINT cvr_party_cvr_fk FOREIGN KEY ( cvr_id )
        REFERENCES cvr ( cvr_id );

ALTER TABLE cvr_party
    ADD CONSTRAINT cvr_party_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE cvr
    ADD CONSTRAINT cvr_reporting_device_fk FOREIGN KEY ( creatingdevice_reporting_device_id )
        REFERENCES reporting_device ( reporting_device_id );

ALTER TABLE cvr_snapshot
    ADD CONSTRAINT cvr_snapshot_cvr_fk FOREIGN KEY ( cvr_cvr_id )
        REFERENCES cvr ( cvr_id );

ALTER TABLE cvr_snapshot_status
    ADD CONSTRAINT cvr_snapshot_status_cvr_snapshot_fk FOREIGN KEY ( cvrsnapshot_cvr_snapshot_id )
        REFERENCES cvr_snapshot ( cvr_snapshot_id );

ALTER TABLE cvr_write_in_write_in_image
    ADD CONSTRAINT cvr_write_in_write_in_image_cvr_write_in_fk FOREIGN KEY ( cvr_write_in_id )
        REFERENCES cvr_write_in ( cvr_write_in_id );

ALTER TABLE cvr_write_in_write_in_image
    ADD CONSTRAINT cvr_write_in_write_in_image_image_data_fk FOREIGN KEY ( image_data_id )
        REFERENCES image_data ( image_data_id );

ALTER TABLE election_code
    ADD CONSTRAINT election_code_code_fk FOREIGN KEY ( code_id )
        REFERENCES code ( code_id );

ALTER TABLE election_code
    ADD CONSTRAINT election_code_election_fk FOREIGN KEY ( election_id )
        REFERENCES election ( election_id );

ALTER TABLE election
    ADD CONSTRAINT election_cast_vote_record_report_fk FOREIGN KEY ( cast_vote_record_report_id )
        REFERENCES cast_vote_record_report ( cast_vote_record_report_id );

ALTER TABLE election
    ADD CONSTRAINT election_gp_unit_fk FOREIGN KEY ( electionscope_gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE gp_unit_code
    ADD CONSTRAINT gp_unit_code_code_fk FOREIGN KEY ( code_id )
        REFERENCES code ( code_id );

ALTER TABLE gp_unit_code
    ADD CONSTRAINT gp_unit_code_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE gp_unit_reporting_device
    ADD CONSTRAINT gp_unit_reporting_device_gp_unit_fk FOREIGN KEY ( gp_unit_id )
        REFERENCES gp_unit ( gp_unit_id );

ALTER TABLE gp_unit_reporting_device
    ADD CONSTRAINT gp_unit_reporting_device_reporting_device_fk FOREIGN KEY ( reporting_device_id )
        REFERENCES reporting_device ( reporting_device_id );

ALTER TABLE gp_unit
    ADD CONSTRAINT gp_unit_cast_vote_record_report_fk FOREIGN KEY ( cast_vote_record_report_id )
        REFERENCES cast_vote_record_report ( cast_vote_record_report_id );

ALTER TABLE image_data
    ADD CONSTRAINT image_data_hash_fk FOREIGN KEY ( hash_id )
        REFERENCES hash ( hash_id );

ALTER TABLE image_data
    ADD CONSTRAINT image_data_image_fk FOREIGN KEY ( file_id,
                                                     image_id )
        REFERENCES image ( file_id,
                           image_id );

ALTER TABLE image
    ADD CONSTRAINT image_file_fk FOREIGN KEY ( file_id )
        REFERENCES "File" ( file_id );

ALTER TABLE party_code
    ADD CONSTRAINT party_code_code_fk FOREIGN KEY ( code_id )
        REFERENCES code ( code_id );

ALTER TABLE party_code
    ADD CONSTRAINT party_code_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE party
    ADD CONSTRAINT party_cast_vote_record_report_fk FOREIGN KEY ( cast_vote_record_report_id )
        REFERENCES cast_vote_record_report ( cast_vote_record_report_id );

ALTER TABLE party_contest
    ADD CONSTRAINT party_contest_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES contest ( contest_id );

ALTER TABLE party_selection_party
    ADD CONSTRAINT party_selection_party_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id );

ALTER TABLE party_selection_party
    ADD CONSTRAINT party_selection_party_party_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES party_selection ( contest_selection_id );

ALTER TABLE party_selection
    ADD CONSTRAINT party_selection_contest_selection_fk FOREIGN KEY ( contest_selection_id )
        REFERENCES contest_selection ( contest_selection_id );

ALTER TABLE reporting_device_code
    ADD CONSTRAINT reporting_device_code_code_fk FOREIGN KEY ( code_id )
        REFERENCES code ( code_id );

ALTER TABLE reporting_device_code
    ADD CONSTRAINT reporting_device_code_reporting_device_fk FOREIGN KEY ( reporting_device_id )
        REFERENCES reporting_device ( reporting_device_id );

ALTER TABLE reporting_device
    ADD CONSTRAINT reporting_device_cast_vote_record_report_fk FOREIGN KEY ( cast_vote_record_report_id )
        REFERENCES cast_vote_record_report ( cast_vote_record_report_id );

ALTER TABLE reporting_device_notes
    ADD CONSTRAINT reporting_device_notes_reporting_device_fk FOREIGN KEY ( reportingdevice_reporting_device_id )
        REFERENCES reporting_device ( reporting_device_id );

ALTER TABLE retention_contest
    ADD CONSTRAINT retention_contest_ballot_measure_contest_fk FOREIGN KEY ( contest_id )
        REFERENCES ballot_measure_contest ( contest_id );

ALTER TABLE retention_contest
    ADD CONSTRAINT retention_contest_candidate_fk FOREIGN KEY ( candidate_id )
        REFERENCES candidate ( candidate_id );

ALTER TABLE selection_position_code
    ADD CONSTRAINT selection_position_code_code_fk FOREIGN KEY ( code_id )
        REFERENCES code ( code_id );

ALTER TABLE selection_position_code
    ADD CONSTRAINT selection_position_code_selection_position_fk FOREIGN KEY ( selection_position_id )
        REFERENCES selection_position ( selection_position_id );

ALTER TABLE selection_position
    ADD CONSTRAINT selection_position_cvr_contest_selection_fk FOREIGN KEY ( cvr_contest_selection_id )
        REFERENCES cvr_contest_selection ( cvr_contest_selection_id );

ALTER TABLE selection_position
    ADD CONSTRAINT selection_position_cvr_write_in_fk FOREIGN KEY ( cvr_write_in_id )
        REFERENCES cvr_write_in ( cvr_write_in_id );

ALTER TABLE selection_position_mark_metric_value
    ADD CONSTRAINT selection_position_mark_metric_value_selection_position_fk FOREIGN KEY ( selectionposition_selection_position_id )
        REFERENCES selection_position ( selection_position_id );

ALTER TABLE selection_position_status
    ADD CONSTRAINT selection_position_status_selection_position_fk FOREIGN KEY ( selectionposition_selection_position_id )
        REFERENCES selection_position ( selection_position_id );

--  ERROR: No Discriminator Column found in Arc FKArc_3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_3 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_4 - constraint trigger for Arc cannot be generated

CREATE SEQUENCE annotation_annotation_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER annotation_annotation_id_trg BEFORE
    INSERT ON annotation
    FOR EACH ROW
    WHEN ( new.annotation_id IS NULL )
BEGIN
    :new.annotation_id := annotation_annotation_id_seq.nextval;
END;
/

CREATE SEQUENCE annotation_adjudicator_name_annotation_adjudicator_name_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER annotation_adjudicator_name_annotation_adjudicator_name_id_trg BEFORE
    INSERT ON annotation_adjudicator_name
    FOR EACH ROW
    WHEN ( new.annotation_adjudicator_name_id IS NULL )
BEGIN
    :new.annotation_adjudicator_name_id := annotation_adjudicator_name_annotation_adjudicator_name_id_seq.nextval;
END;
/

CREATE SEQUENCE annotation_message_annotation_message_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER annotation_message_annotation_message_id_trg BEFORE
    INSERT ON annotation_message
    FOR EACH ROW
    WHEN ( new.annotation_message_id IS NULL )
BEGIN
    :new.annotation_message_id := annotation_message_annotation_message_id_seq.nextval;
END;
/

CREATE SEQUENCE ballot_measure_contest_ballot_measure_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ballot_measure_contest_ballot_measure_contest_id_trg BEFORE
    INSERT ON ballot_measure_contest
    FOR EACH ROW
    WHEN ( new.ballot_measure_contest_id IS NULL )
BEGIN
    :new.ballot_measure_contest_id := ballot_measure_contest_ballot_measure_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE ballot_measure_selection_ballot_measure_selection_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ballot_measure_selection_ballot_measure_selection_id_trg BEFORE
    INSERT ON ballot_measure_selection
    FOR EACH ROW
    WHEN ( new.ballot_measure_selection_id IS NULL )
BEGIN
    :new.ballot_measure_selection_id := ballot_measure_selection_ballot_measure_selection_id_seq.nextval;
END;
/

CREATE SEQUENCE candidate_candidate_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER candidate_candidate_id_trg BEFORE
    INSERT ON candidate
    FOR EACH ROW
    WHEN ( new.candidate_id IS NULL )
BEGIN
    :new.candidate_id := candidate_candidate_id_seq.nextval;
END;
/

CREATE SEQUENCE candidate_contest_candidate_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER candidate_contest_candidate_contest_id_trg BEFORE
    INSERT ON candidate_contest
    FOR EACH ROW
    WHEN ( new.candidate_contest_id IS NULL )
BEGIN
    :new.candidate_contest_id := candidate_contest_candidate_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE candidate_selection_candidate_selection_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER candidate_selection_candidate_selection_id_trg BEFORE
    INSERT ON candidate_selection
    FOR EACH ROW
    WHEN ( new.candidate_selection_id IS NULL )
BEGIN
    :new.candidate_selection_id := candidate_selection_candidate_selection_id_seq.nextval;
END;
/

CREATE SEQUENCE cast_vote_record_report_cast_vote_record_report_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cast_vote_record_report_cast_vote_record_report_id_trg BEFORE
    INSERT ON cast_vote_record_report
    FOR EACH ROW
    WHEN ( new.cast_vote_record_report_id IS NULL )
BEGIN
    :new.cast_vote_record_report_id := cast_vote_record_report_cast_vote_record_report_id_seq.nextval;
END;
/

CREATE SEQUENCE cast_vote_record_report_report_type_cast_vote_record_report_report_type_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cast_vote_record_report_report_type_cast_vote_record_report_report_type_id_trg BEFORE
    INSERT ON cast_vote_record_report_report_type
    FOR EACH ROW
    WHEN ( new.cast_vote_record_report_report_type_id IS NULL )
BEGIN
    :new.cast_vote_record_report_report_type_id := cast_vote_record_report_report_type_cast_vote_record_report_report_type_id_seq.
    nextval;
END;
/

CREATE SEQUENCE code_code_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER code_code_id_trg BEFORE
    INSERT ON code
    FOR EACH ROW
    WHEN ( new.code_id IS NULL )
BEGIN
    :new.code_id := code_code_id_seq.nextval;
END;
/

CREATE SEQUENCE contest_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER contest_contest_id_trg BEFORE
    INSERT ON contest
    FOR EACH ROW
    WHEN ( new.contest_id IS NULL )
BEGIN
    :new.contest_id := contest_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE contest_selection_contest_selection_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER contest_selection_contest_selection_id_trg BEFORE
    INSERT ON contest_selection
    FOR EACH ROW
    WHEN ( new.contest_selection_id IS NULL )
BEGIN
    :new.contest_selection_id := contest_selection_contest_selection_id_seq.nextval;
END;
/

CREATE SEQUENCE cvr_cvr_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cvr_cvr_id_trg BEFORE
    INSERT ON cvr
    FOR EACH ROW
    WHEN ( new.cvr_id IS NULL )
BEGIN
    :new.cvr_id := cvr_cvr_id_seq.nextval;
END;
/

CREATE SEQUENCE cvr_contest_cvr_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cvr_contest_cvr_contest_id_trg BEFORE
    INSERT ON cvr_contest
    FOR EACH ROW
    WHEN ( new.cvr_contest_id IS NULL )
BEGIN
    :new.cvr_contest_id := cvr_contest_cvr_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE cvr_contest_selection_cvr_contest_selection_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cvr_contest_selection_cvr_contest_selection_id_trg BEFORE
    INSERT ON cvr_contest_selection
    FOR EACH ROW
    WHEN ( new.cvr_contest_selection_id IS NULL )
BEGIN
    :new.cvr_contest_selection_id := cvr_contest_selection_cvr_contest_selection_id_seq.nextval;
END;
/

CREATE SEQUENCE cvr_contest_selection_status_cvr_contest_selection_status_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cvr_contest_selection_status_cvr_contest_selection_status_id_trg BEFORE
    INSERT ON cvr_contest_selection_status
    FOR EACH ROW
    WHEN ( new.cvr_contest_selection_status_id IS NULL )
BEGIN
    :new.cvr_contest_selection_status_id := cvr_contest_selection_status_cvr_contest_selection_status_id_seq.nextval;
END;
/

CREATE SEQUENCE cvr_contest_status_cvr_contest_status_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cvr_contest_status_cvr_contest_status_id_trg BEFORE
    INSERT ON cvr_contest_status
    FOR EACH ROW
    WHEN ( new.cvr_contest_status_id IS NULL )
BEGIN
    :new.cvr_contest_status_id := cvr_contest_status_cvr_contest_status_id_seq.nextval;
END;
/

CREATE SEQUENCE cvr_snapshot_cvr_snapshot_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cvr_snapshot_cvr_snapshot_id_trg BEFORE
    INSERT ON cvr_snapshot
    FOR EACH ROW
    WHEN ( new.cvr_snapshot_id IS NULL )
BEGIN
    :new.cvr_snapshot_id := cvr_snapshot_cvr_snapshot_id_seq.nextval;
END;
/

CREATE SEQUENCE cvr_snapshot_status_cvr_snapshot_status_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cvr_snapshot_status_cvr_snapshot_status_id_trg BEFORE
    INSERT ON cvr_snapshot_status
    FOR EACH ROW
    WHEN ( new.cvr_snapshot_status_id IS NULL )
BEGIN
    :new.cvr_snapshot_status_id := cvr_snapshot_status_cvr_snapshot_status_id_seq.nextval;
END;
/

CREATE SEQUENCE cvr_write_in_cvr_write_in_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cvr_write_in_cvr_write_in_id_trg BEFORE
    INSERT ON cvr_write_in
    FOR EACH ROW
    WHEN ( new.cvr_write_in_id IS NULL )
BEGIN
    :new.cvr_write_in_id := cvr_write_in_cvr_write_in_id_seq.nextval;
END;
/

CREATE SEQUENCE election_election_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER election_election_id_trg BEFORE
    INSERT ON election
    FOR EACH ROW
    WHEN ( new.election_id IS NULL )
BEGIN
    :new.election_id := election_election_id_seq.nextval;
END;
/

CREATE SEQUENCE file_file_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER file_file_id_trg BEFORE
    INSERT ON "File"
    FOR EACH ROW
    WHEN ( new.file_id IS NULL )
BEGIN
    :new.file_id := file_file_id_seq.nextval;
END;
/

CREATE SEQUENCE gp_unit_gp_unit_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER gp_unit_gp_unit_id_trg BEFORE
    INSERT ON gp_unit
    FOR EACH ROW
    WHEN ( new.gp_unit_id IS NULL )
BEGIN
    :new.gp_unit_id := gp_unit_gp_unit_id_seq.nextval;
END;
/

CREATE SEQUENCE hash_hash_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER hash_hash_id_trg BEFORE
    INSERT ON hash
    FOR EACH ROW
    WHEN ( new.hash_id IS NULL )
BEGIN
    :new.hash_id := hash_hash_id_seq.nextval;
END;
/

CREATE SEQUENCE image_image_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER image_image_id_trg BEFORE
    INSERT ON image
    FOR EACH ROW
    WHEN ( new.image_id IS NULL )
BEGIN
    :new.image_id := image_image_id_seq.nextval;
END;
/

CREATE SEQUENCE image_data_image_data_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER image_data_image_data_id_trg BEFORE
    INSERT ON image_data
    FOR EACH ROW
    WHEN ( new.image_data_id IS NULL )
BEGIN
    :new.image_data_id := image_data_image_data_id_seq.nextval;
END;
/

CREATE SEQUENCE party_party_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER party_party_id_trg BEFORE
    INSERT ON party
    FOR EACH ROW
    WHEN ( new.party_id IS NULL )
BEGIN
    :new.party_id := party_party_id_seq.nextval;
END;
/

CREATE SEQUENCE party_contest_party_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER party_contest_party_contest_id_trg BEFORE
    INSERT ON party_contest
    FOR EACH ROW
    WHEN ( new.party_contest_id IS NULL )
BEGIN
    :new.party_contest_id := party_contest_party_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE party_selection_party_selection_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER party_selection_party_selection_id_trg BEFORE
    INSERT ON party_selection
    FOR EACH ROW
    WHEN ( new.party_selection_id IS NULL )
BEGIN
    :new.party_selection_id := party_selection_party_selection_id_seq.nextval;
END;
/

CREATE SEQUENCE reporting_device_reporting_device_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER reporting_device_reporting_device_id_trg BEFORE
    INSERT ON reporting_device
    FOR EACH ROW
    WHEN ( new.reporting_device_id IS NULL )
BEGIN
    :new.reporting_device_id := reporting_device_reporting_device_id_seq.nextval;
END;
/

CREATE SEQUENCE reporting_device_notes_reporting_device_notes_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER reporting_device_notes_reporting_device_notes_id_trg BEFORE
    INSERT ON reporting_device_notes
    FOR EACH ROW
    WHEN ( new.reporting_device_notes_id IS NULL )
BEGIN
    :new.reporting_device_notes_id := reporting_device_notes_reporting_device_notes_id_seq.nextval;
END;
/

CREATE SEQUENCE retention_contest_retention_contest_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER retention_contest_retention_contest_id_trg BEFORE
    INSERT ON retention_contest
    FOR EACH ROW
    WHEN ( new.retention_contest_id IS NULL )
BEGIN
    :new.retention_contest_id := retention_contest_retention_contest_id_seq.nextval;
END;
/

CREATE SEQUENCE selection_position_selection_position_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER selection_position_selection_position_id_trg BEFORE
    INSERT ON selection_position
    FOR EACH ROW
    WHEN ( new.selection_position_id IS NULL )
BEGIN
    :new.selection_position_id := selection_position_selection_position_id_seq.nextval;
END;
/

CREATE SEQUENCE selection_position_mark_metric_value_selection_position_mark_metric_value_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER selection_position_mark_metric_value_selection_position_mark_metric_value_id_trg BEFORE
    INSERT ON selection_position_mark_metric_value
    FOR EACH ROW
    WHEN ( new.selection_position_mark_metric_value_id IS NULL )
BEGIN
    :new.selection_position_mark_metric_value_id := selection_position_mark_metric_value_selection_position_mark_metric_value_id_seq.
    nextval;
END;
/

CREATE SEQUENCE selection_position_status_selection_position_status_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER selection_position_status_selection_position_status_id_trg BEFORE
    INSERT ON selection_position_status
    FOR EACH ROW
    WHEN ( new.selection_position_status_id IS NULL )
BEGIN
    :new.selection_position_status_id := selection_position_status_selection_position_status_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            51
-- CREATE INDEX                             3
-- ALTER TABLE                            144
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          36
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         36
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   7
-- WARNINGS                                 0
